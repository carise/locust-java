// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: render.proto

package locust.render;

public final class Render {
  private Render() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface IndexKeyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:locust.render.IndexKey)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string filepath = 1;</code>
     * @return The filepath.
     */
    java.lang.String getFilepath();
    /**
     * <code>string filepath = 1;</code>
     * @return The bytes for filepath.
     */
    com.google.protobuf.ByteString
        getFilepathBytes();

    /**
     * <code>string name = 2;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <code>string name = 2;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>int32 line = 3;</code>
     * @return The line.
     */
    int getLine();

    /**
     * <code>string revision = 4;</code>
     * @return The revision.
     */
    java.lang.String getRevision();
    /**
     * <code>string revision = 4;</code>
     * @return The bytes for revision.
     */
    com.google.protobuf.ByteString
        getRevisionBytes();
  }
  /**
   * Protobuf type {@code locust.render.IndexKey}
   */
  public static final class IndexKey extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:locust.render.IndexKey)
      IndexKeyOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use IndexKey.newBuilder() to construct.
    private IndexKey(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private IndexKey() {
      filepath_ = "";
      name_ = "";
      revision_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new IndexKey();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private IndexKey(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              filepath_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 24: {

              line_ = input.readInt32();
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              revision_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return locust.render.Render.internal_static_locust_render_IndexKey_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return locust.render.Render.internal_static_locust_render_IndexKey_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              locust.render.Render.IndexKey.class, locust.render.Render.IndexKey.Builder.class);
    }

    public static final int FILEPATH_FIELD_NUMBER = 1;
    private volatile java.lang.Object filepath_;
    /**
     * <code>string filepath = 1;</code>
     * @return The filepath.
     */
    @java.lang.Override
    public java.lang.String getFilepath() {
      java.lang.Object ref = filepath_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        filepath_ = s;
        return s;
      }
    }
    /**
     * <code>string filepath = 1;</code>
     * @return The bytes for filepath.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getFilepathBytes() {
      java.lang.Object ref = filepath_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        filepath_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object name_;
    /**
     * <code>string name = 2;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <code>string name = 2;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LINE_FIELD_NUMBER = 3;
    private int line_;
    /**
     * <code>int32 line = 3;</code>
     * @return The line.
     */
    @java.lang.Override
    public int getLine() {
      return line_;
    }

    public static final int REVISION_FIELD_NUMBER = 4;
    private volatile java.lang.Object revision_;
    /**
     * <code>string revision = 4;</code>
     * @return The revision.
     */
    @java.lang.Override
    public java.lang.String getRevision() {
      java.lang.Object ref = revision_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        revision_ = s;
        return s;
      }
    }
    /**
     * <code>string revision = 4;</code>
     * @return The bytes for revision.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getRevisionBytes() {
      java.lang.Object ref = revision_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        revision_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getFilepathBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, filepath_);
      }
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, name_);
      }
      if (line_ != 0) {
        output.writeInt32(3, line_);
      }
      if (!getRevisionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, revision_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getFilepathBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, filepath_);
      }
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, name_);
      }
      if (line_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, line_);
      }
      if (!getRevisionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, revision_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof locust.render.Render.IndexKey)) {
        return super.equals(obj);
      }
      locust.render.Render.IndexKey other = (locust.render.Render.IndexKey) obj;

      if (!getFilepath()
          .equals(other.getFilepath())) return false;
      if (!getName()
          .equals(other.getName())) return false;
      if (getLine()
          != other.getLine()) return false;
      if (!getRevision()
          .equals(other.getRevision())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + FILEPATH_FIELD_NUMBER;
      hash = (53 * hash) + getFilepath().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + LINE_FIELD_NUMBER;
      hash = (53 * hash) + getLine();
      hash = (37 * hash) + REVISION_FIELD_NUMBER;
      hash = (53 * hash) + getRevision().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static locust.render.Render.IndexKey parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static locust.render.Render.IndexKey parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static locust.render.Render.IndexKey parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static locust.render.Render.IndexKey parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static locust.render.Render.IndexKey parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static locust.render.Render.IndexKey parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static locust.render.Render.IndexKey parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static locust.render.Render.IndexKey parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static locust.render.Render.IndexKey parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static locust.render.Render.IndexKey parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static locust.render.Render.IndexKey parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static locust.render.Render.IndexKey parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(locust.render.Render.IndexKey prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code locust.render.IndexKey}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:locust.render.IndexKey)
        locust.render.Render.IndexKeyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return locust.render.Render.internal_static_locust_render_IndexKey_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return locust.render.Render.internal_static_locust_render_IndexKey_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                locust.render.Render.IndexKey.class, locust.render.Render.IndexKey.Builder.class);
      }

      // Construct using locust.render.Render.IndexKey.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        filepath_ = "";

        name_ = "";

        line_ = 0;

        revision_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return locust.render.Render.internal_static_locust_render_IndexKey_descriptor;
      }

      @java.lang.Override
      public locust.render.Render.IndexKey getDefaultInstanceForType() {
        return locust.render.Render.IndexKey.getDefaultInstance();
      }

      @java.lang.Override
      public locust.render.Render.IndexKey build() {
        locust.render.Render.IndexKey result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public locust.render.Render.IndexKey buildPartial() {
        locust.render.Render.IndexKey result = new locust.render.Render.IndexKey(this);
        result.filepath_ = filepath_;
        result.name_ = name_;
        result.line_ = line_;
        result.revision_ = revision_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof locust.render.Render.IndexKey) {
          return mergeFrom((locust.render.Render.IndexKey)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(locust.render.Render.IndexKey other) {
        if (other == locust.render.Render.IndexKey.getDefaultInstance()) return this;
        if (!other.getFilepath().isEmpty()) {
          filepath_ = other.filepath_;
          onChanged();
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (other.getLine() != 0) {
          setLine(other.getLine());
        }
        if (!other.getRevision().isEmpty()) {
          revision_ = other.revision_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        locust.render.Render.IndexKey parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (locust.render.Render.IndexKey) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object filepath_ = "";
      /**
       * <code>string filepath = 1;</code>
       * @return The filepath.
       */
      public java.lang.String getFilepath() {
        java.lang.Object ref = filepath_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          filepath_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string filepath = 1;</code>
       * @return The bytes for filepath.
       */
      public com.google.protobuf.ByteString
          getFilepathBytes() {
        java.lang.Object ref = filepath_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          filepath_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string filepath = 1;</code>
       * @param value The filepath to set.
       * @return This builder for chaining.
       */
      public Builder setFilepath(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        filepath_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string filepath = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearFilepath() {
        
        filepath_ = getDefaultInstance().getFilepath();
        onChanged();
        return this;
      }
      /**
       * <code>string filepath = 1;</code>
       * @param value The bytes for filepath to set.
       * @return This builder for chaining.
       */
      public Builder setFilepathBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        filepath_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <code>string name = 2;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string name = 2;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string name = 2;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string name = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>string name = 2;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private int line_ ;
      /**
       * <code>int32 line = 3;</code>
       * @return The line.
       */
      @java.lang.Override
      public int getLine() {
        return line_;
      }
      /**
       * <code>int32 line = 3;</code>
       * @param value The line to set.
       * @return This builder for chaining.
       */
      public Builder setLine(int value) {
        
        line_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 line = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearLine() {
        
        line_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object revision_ = "";
      /**
       * <code>string revision = 4;</code>
       * @return The revision.
       */
      public java.lang.String getRevision() {
        java.lang.Object ref = revision_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          revision_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string revision = 4;</code>
       * @return The bytes for revision.
       */
      public com.google.protobuf.ByteString
          getRevisionBytes() {
        java.lang.Object ref = revision_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          revision_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string revision = 4;</code>
       * @param value The revision to set.
       * @return This builder for chaining.
       */
      public Builder setRevision(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        revision_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string revision = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearRevision() {
        
        revision_ = getDefaultInstance().getRevision();
        onChanged();
        return this;
      }
      /**
       * <code>string revision = 4;</code>
       * @param value The bytes for revision to set.
       * @return This builder for chaining.
       */
      public Builder setRevisionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        revision_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:locust.render.IndexKey)
    }

    // @@protoc_insertion_point(class_scope:locust.render.IndexKey)
    private static final locust.render.Render.IndexKey DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new locust.render.Render.IndexKey();
    }

    public static locust.render.Render.IndexKey getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<IndexKey>
        PARSER = new com.google.protobuf.AbstractParser<IndexKey>() {
      @java.lang.Override
      public IndexKey parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new IndexKey(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<IndexKey> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<IndexKey> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public locust.render.Render.IndexKey getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface NestedChangeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:locust.render.NestedChange)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.locust.render.IndexKey key = 1;</code>
     * @return Whether the key field is set.
     */
    boolean hasKey();
    /**
     * <code>.locust.render.IndexKey key = 1;</code>
     * @return The key.
     */
    locust.render.Render.IndexKey getKey();
    /**
     * <code>.locust.render.IndexKey key = 1;</code>
     */
    locust.render.Render.IndexKeyOrBuilder getKeyOrBuilder();

    /**
     * <code>.locust.parse.LocustChange change = 2;</code>
     * @return Whether the change field is set.
     */
    boolean hasChange();
    /**
     * <code>.locust.parse.LocustChange change = 2;</code>
     * @return The change.
     */
    locust.parse.Parse.LocustChange getChange();
    /**
     * <code>.locust.parse.LocustChange change = 2;</code>
     */
    locust.parse.Parse.LocustChangeOrBuilder getChangeOrBuilder();

    /**
     * <code>repeated .locust.render.NestedChange children = 3;</code>
     */
    java.util.List<locust.render.Render.NestedChange> 
        getChildrenList();
    /**
     * <code>repeated .locust.render.NestedChange children = 3;</code>
     */
    locust.render.Render.NestedChange getChildren(int index);
    /**
     * <code>repeated .locust.render.NestedChange children = 3;</code>
     */
    int getChildrenCount();
    /**
     * <code>repeated .locust.render.NestedChange children = 3;</code>
     */
    java.util.List<? extends locust.render.Render.NestedChangeOrBuilder> 
        getChildrenOrBuilderList();
    /**
     * <code>repeated .locust.render.NestedChange children = 3;</code>
     */
    locust.render.Render.NestedChangeOrBuilder getChildrenOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code locust.render.NestedChange}
   */
  public static final class NestedChange extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:locust.render.NestedChange)
      NestedChangeOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use NestedChange.newBuilder() to construct.
    private NestedChange(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private NestedChange() {
      children_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new NestedChange();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private NestedChange(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              locust.render.Render.IndexKey.Builder subBuilder = null;
              if (key_ != null) {
                subBuilder = key_.toBuilder();
              }
              key_ = input.readMessage(locust.render.Render.IndexKey.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(key_);
                key_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              locust.parse.Parse.LocustChange.Builder subBuilder = null;
              if (change_ != null) {
                subBuilder = change_.toBuilder();
              }
              change_ = input.readMessage(locust.parse.Parse.LocustChange.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(change_);
                change_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                children_ = new java.util.ArrayList<locust.render.Render.NestedChange>();
                mutable_bitField0_ |= 0x00000001;
              }
              children_.add(
                  input.readMessage(locust.render.Render.NestedChange.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          children_ = java.util.Collections.unmodifiableList(children_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return locust.render.Render.internal_static_locust_render_NestedChange_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return locust.render.Render.internal_static_locust_render_NestedChange_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              locust.render.Render.NestedChange.class, locust.render.Render.NestedChange.Builder.class);
    }

    public static final int KEY_FIELD_NUMBER = 1;
    private locust.render.Render.IndexKey key_;
    /**
     * <code>.locust.render.IndexKey key = 1;</code>
     * @return Whether the key field is set.
     */
    @java.lang.Override
    public boolean hasKey() {
      return key_ != null;
    }
    /**
     * <code>.locust.render.IndexKey key = 1;</code>
     * @return The key.
     */
    @java.lang.Override
    public locust.render.Render.IndexKey getKey() {
      return key_ == null ? locust.render.Render.IndexKey.getDefaultInstance() : key_;
    }
    /**
     * <code>.locust.render.IndexKey key = 1;</code>
     */
    @java.lang.Override
    public locust.render.Render.IndexKeyOrBuilder getKeyOrBuilder() {
      return getKey();
    }

    public static final int CHANGE_FIELD_NUMBER = 2;
    private locust.parse.Parse.LocustChange change_;
    /**
     * <code>.locust.parse.LocustChange change = 2;</code>
     * @return Whether the change field is set.
     */
    @java.lang.Override
    public boolean hasChange() {
      return change_ != null;
    }
    /**
     * <code>.locust.parse.LocustChange change = 2;</code>
     * @return The change.
     */
    @java.lang.Override
    public locust.parse.Parse.LocustChange getChange() {
      return change_ == null ? locust.parse.Parse.LocustChange.getDefaultInstance() : change_;
    }
    /**
     * <code>.locust.parse.LocustChange change = 2;</code>
     */
    @java.lang.Override
    public locust.parse.Parse.LocustChangeOrBuilder getChangeOrBuilder() {
      return getChange();
    }

    public static final int CHILDREN_FIELD_NUMBER = 3;
    private java.util.List<locust.render.Render.NestedChange> children_;
    /**
     * <code>repeated .locust.render.NestedChange children = 3;</code>
     */
    @java.lang.Override
    public java.util.List<locust.render.Render.NestedChange> getChildrenList() {
      return children_;
    }
    /**
     * <code>repeated .locust.render.NestedChange children = 3;</code>
     */
    @java.lang.Override
    public java.util.List<? extends locust.render.Render.NestedChangeOrBuilder> 
        getChildrenOrBuilderList() {
      return children_;
    }
    /**
     * <code>repeated .locust.render.NestedChange children = 3;</code>
     */
    @java.lang.Override
    public int getChildrenCount() {
      return children_.size();
    }
    /**
     * <code>repeated .locust.render.NestedChange children = 3;</code>
     */
    @java.lang.Override
    public locust.render.Render.NestedChange getChildren(int index) {
      return children_.get(index);
    }
    /**
     * <code>repeated .locust.render.NestedChange children = 3;</code>
     */
    @java.lang.Override
    public locust.render.Render.NestedChangeOrBuilder getChildrenOrBuilder(
        int index) {
      return children_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (key_ != null) {
        output.writeMessage(1, getKey());
      }
      if (change_ != null) {
        output.writeMessage(2, getChange());
      }
      for (int i = 0; i < children_.size(); i++) {
        output.writeMessage(3, children_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (key_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getKey());
      }
      if (change_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getChange());
      }
      for (int i = 0; i < children_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, children_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof locust.render.Render.NestedChange)) {
        return super.equals(obj);
      }
      locust.render.Render.NestedChange other = (locust.render.Render.NestedChange) obj;

      if (hasKey() != other.hasKey()) return false;
      if (hasKey()) {
        if (!getKey()
            .equals(other.getKey())) return false;
      }
      if (hasChange() != other.hasChange()) return false;
      if (hasChange()) {
        if (!getChange()
            .equals(other.getChange())) return false;
      }
      if (!getChildrenList()
          .equals(other.getChildrenList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasKey()) {
        hash = (37 * hash) + KEY_FIELD_NUMBER;
        hash = (53 * hash) + getKey().hashCode();
      }
      if (hasChange()) {
        hash = (37 * hash) + CHANGE_FIELD_NUMBER;
        hash = (53 * hash) + getChange().hashCode();
      }
      if (getChildrenCount() > 0) {
        hash = (37 * hash) + CHILDREN_FIELD_NUMBER;
        hash = (53 * hash) + getChildrenList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static locust.render.Render.NestedChange parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static locust.render.Render.NestedChange parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static locust.render.Render.NestedChange parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static locust.render.Render.NestedChange parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static locust.render.Render.NestedChange parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static locust.render.Render.NestedChange parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static locust.render.Render.NestedChange parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static locust.render.Render.NestedChange parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static locust.render.Render.NestedChange parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static locust.render.Render.NestedChange parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static locust.render.Render.NestedChange parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static locust.render.Render.NestedChange parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(locust.render.Render.NestedChange prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code locust.render.NestedChange}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:locust.render.NestedChange)
        locust.render.Render.NestedChangeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return locust.render.Render.internal_static_locust_render_NestedChange_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return locust.render.Render.internal_static_locust_render_NestedChange_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                locust.render.Render.NestedChange.class, locust.render.Render.NestedChange.Builder.class);
      }

      // Construct using locust.render.Render.NestedChange.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getChildrenFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (keyBuilder_ == null) {
          key_ = null;
        } else {
          key_ = null;
          keyBuilder_ = null;
        }
        if (changeBuilder_ == null) {
          change_ = null;
        } else {
          change_ = null;
          changeBuilder_ = null;
        }
        if (childrenBuilder_ == null) {
          children_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          childrenBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return locust.render.Render.internal_static_locust_render_NestedChange_descriptor;
      }

      @java.lang.Override
      public locust.render.Render.NestedChange getDefaultInstanceForType() {
        return locust.render.Render.NestedChange.getDefaultInstance();
      }

      @java.lang.Override
      public locust.render.Render.NestedChange build() {
        locust.render.Render.NestedChange result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public locust.render.Render.NestedChange buildPartial() {
        locust.render.Render.NestedChange result = new locust.render.Render.NestedChange(this);
        int from_bitField0_ = bitField0_;
        if (keyBuilder_ == null) {
          result.key_ = key_;
        } else {
          result.key_ = keyBuilder_.build();
        }
        if (changeBuilder_ == null) {
          result.change_ = change_;
        } else {
          result.change_ = changeBuilder_.build();
        }
        if (childrenBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            children_ = java.util.Collections.unmodifiableList(children_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.children_ = children_;
        } else {
          result.children_ = childrenBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof locust.render.Render.NestedChange) {
          return mergeFrom((locust.render.Render.NestedChange)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(locust.render.Render.NestedChange other) {
        if (other == locust.render.Render.NestedChange.getDefaultInstance()) return this;
        if (other.hasKey()) {
          mergeKey(other.getKey());
        }
        if (other.hasChange()) {
          mergeChange(other.getChange());
        }
        if (childrenBuilder_ == null) {
          if (!other.children_.isEmpty()) {
            if (children_.isEmpty()) {
              children_ = other.children_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureChildrenIsMutable();
              children_.addAll(other.children_);
            }
            onChanged();
          }
        } else {
          if (!other.children_.isEmpty()) {
            if (childrenBuilder_.isEmpty()) {
              childrenBuilder_.dispose();
              childrenBuilder_ = null;
              children_ = other.children_;
              bitField0_ = (bitField0_ & ~0x00000001);
              childrenBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getChildrenFieldBuilder() : null;
            } else {
              childrenBuilder_.addAllMessages(other.children_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        locust.render.Render.NestedChange parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (locust.render.Render.NestedChange) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private locust.render.Render.IndexKey key_;
      private com.google.protobuf.SingleFieldBuilderV3<
          locust.render.Render.IndexKey, locust.render.Render.IndexKey.Builder, locust.render.Render.IndexKeyOrBuilder> keyBuilder_;
      /**
       * <code>.locust.render.IndexKey key = 1;</code>
       * @return Whether the key field is set.
       */
      public boolean hasKey() {
        return keyBuilder_ != null || key_ != null;
      }
      /**
       * <code>.locust.render.IndexKey key = 1;</code>
       * @return The key.
       */
      public locust.render.Render.IndexKey getKey() {
        if (keyBuilder_ == null) {
          return key_ == null ? locust.render.Render.IndexKey.getDefaultInstance() : key_;
        } else {
          return keyBuilder_.getMessage();
        }
      }
      /**
       * <code>.locust.render.IndexKey key = 1;</code>
       */
      public Builder setKey(locust.render.Render.IndexKey value) {
        if (keyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          key_ = value;
          onChanged();
        } else {
          keyBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.locust.render.IndexKey key = 1;</code>
       */
      public Builder setKey(
          locust.render.Render.IndexKey.Builder builderForValue) {
        if (keyBuilder_ == null) {
          key_ = builderForValue.build();
          onChanged();
        } else {
          keyBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.locust.render.IndexKey key = 1;</code>
       */
      public Builder mergeKey(locust.render.Render.IndexKey value) {
        if (keyBuilder_ == null) {
          if (key_ != null) {
            key_ =
              locust.render.Render.IndexKey.newBuilder(key_).mergeFrom(value).buildPartial();
          } else {
            key_ = value;
          }
          onChanged();
        } else {
          keyBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.locust.render.IndexKey key = 1;</code>
       */
      public Builder clearKey() {
        if (keyBuilder_ == null) {
          key_ = null;
          onChanged();
        } else {
          key_ = null;
          keyBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.locust.render.IndexKey key = 1;</code>
       */
      public locust.render.Render.IndexKey.Builder getKeyBuilder() {
        
        onChanged();
        return getKeyFieldBuilder().getBuilder();
      }
      /**
       * <code>.locust.render.IndexKey key = 1;</code>
       */
      public locust.render.Render.IndexKeyOrBuilder getKeyOrBuilder() {
        if (keyBuilder_ != null) {
          return keyBuilder_.getMessageOrBuilder();
        } else {
          return key_ == null ?
              locust.render.Render.IndexKey.getDefaultInstance() : key_;
        }
      }
      /**
       * <code>.locust.render.IndexKey key = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          locust.render.Render.IndexKey, locust.render.Render.IndexKey.Builder, locust.render.Render.IndexKeyOrBuilder> 
          getKeyFieldBuilder() {
        if (keyBuilder_ == null) {
          keyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              locust.render.Render.IndexKey, locust.render.Render.IndexKey.Builder, locust.render.Render.IndexKeyOrBuilder>(
                  getKey(),
                  getParentForChildren(),
                  isClean());
          key_ = null;
        }
        return keyBuilder_;
      }

      private locust.parse.Parse.LocustChange change_;
      private com.google.protobuf.SingleFieldBuilderV3<
          locust.parse.Parse.LocustChange, locust.parse.Parse.LocustChange.Builder, locust.parse.Parse.LocustChangeOrBuilder> changeBuilder_;
      /**
       * <code>.locust.parse.LocustChange change = 2;</code>
       * @return Whether the change field is set.
       */
      public boolean hasChange() {
        return changeBuilder_ != null || change_ != null;
      }
      /**
       * <code>.locust.parse.LocustChange change = 2;</code>
       * @return The change.
       */
      public locust.parse.Parse.LocustChange getChange() {
        if (changeBuilder_ == null) {
          return change_ == null ? locust.parse.Parse.LocustChange.getDefaultInstance() : change_;
        } else {
          return changeBuilder_.getMessage();
        }
      }
      /**
       * <code>.locust.parse.LocustChange change = 2;</code>
       */
      public Builder setChange(locust.parse.Parse.LocustChange value) {
        if (changeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          change_ = value;
          onChanged();
        } else {
          changeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.locust.parse.LocustChange change = 2;</code>
       */
      public Builder setChange(
          locust.parse.Parse.LocustChange.Builder builderForValue) {
        if (changeBuilder_ == null) {
          change_ = builderForValue.build();
          onChanged();
        } else {
          changeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.locust.parse.LocustChange change = 2;</code>
       */
      public Builder mergeChange(locust.parse.Parse.LocustChange value) {
        if (changeBuilder_ == null) {
          if (change_ != null) {
            change_ =
              locust.parse.Parse.LocustChange.newBuilder(change_).mergeFrom(value).buildPartial();
          } else {
            change_ = value;
          }
          onChanged();
        } else {
          changeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.locust.parse.LocustChange change = 2;</code>
       */
      public Builder clearChange() {
        if (changeBuilder_ == null) {
          change_ = null;
          onChanged();
        } else {
          change_ = null;
          changeBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.locust.parse.LocustChange change = 2;</code>
       */
      public locust.parse.Parse.LocustChange.Builder getChangeBuilder() {
        
        onChanged();
        return getChangeFieldBuilder().getBuilder();
      }
      /**
       * <code>.locust.parse.LocustChange change = 2;</code>
       */
      public locust.parse.Parse.LocustChangeOrBuilder getChangeOrBuilder() {
        if (changeBuilder_ != null) {
          return changeBuilder_.getMessageOrBuilder();
        } else {
          return change_ == null ?
              locust.parse.Parse.LocustChange.getDefaultInstance() : change_;
        }
      }
      /**
       * <code>.locust.parse.LocustChange change = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          locust.parse.Parse.LocustChange, locust.parse.Parse.LocustChange.Builder, locust.parse.Parse.LocustChangeOrBuilder> 
          getChangeFieldBuilder() {
        if (changeBuilder_ == null) {
          changeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              locust.parse.Parse.LocustChange, locust.parse.Parse.LocustChange.Builder, locust.parse.Parse.LocustChangeOrBuilder>(
                  getChange(),
                  getParentForChildren(),
                  isClean());
          change_ = null;
        }
        return changeBuilder_;
      }

      private java.util.List<locust.render.Render.NestedChange> children_ =
        java.util.Collections.emptyList();
      private void ensureChildrenIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          children_ = new java.util.ArrayList<locust.render.Render.NestedChange>(children_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          locust.render.Render.NestedChange, locust.render.Render.NestedChange.Builder, locust.render.Render.NestedChangeOrBuilder> childrenBuilder_;

      /**
       * <code>repeated .locust.render.NestedChange children = 3;</code>
       */
      public java.util.List<locust.render.Render.NestedChange> getChildrenList() {
        if (childrenBuilder_ == null) {
          return java.util.Collections.unmodifiableList(children_);
        } else {
          return childrenBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .locust.render.NestedChange children = 3;</code>
       */
      public int getChildrenCount() {
        if (childrenBuilder_ == null) {
          return children_.size();
        } else {
          return childrenBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .locust.render.NestedChange children = 3;</code>
       */
      public locust.render.Render.NestedChange getChildren(int index) {
        if (childrenBuilder_ == null) {
          return children_.get(index);
        } else {
          return childrenBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .locust.render.NestedChange children = 3;</code>
       */
      public Builder setChildren(
          int index, locust.render.Render.NestedChange value) {
        if (childrenBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChildrenIsMutable();
          children_.set(index, value);
          onChanged();
        } else {
          childrenBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .locust.render.NestedChange children = 3;</code>
       */
      public Builder setChildren(
          int index, locust.render.Render.NestedChange.Builder builderForValue) {
        if (childrenBuilder_ == null) {
          ensureChildrenIsMutable();
          children_.set(index, builderForValue.build());
          onChanged();
        } else {
          childrenBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .locust.render.NestedChange children = 3;</code>
       */
      public Builder addChildren(locust.render.Render.NestedChange value) {
        if (childrenBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChildrenIsMutable();
          children_.add(value);
          onChanged();
        } else {
          childrenBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .locust.render.NestedChange children = 3;</code>
       */
      public Builder addChildren(
          int index, locust.render.Render.NestedChange value) {
        if (childrenBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChildrenIsMutable();
          children_.add(index, value);
          onChanged();
        } else {
          childrenBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .locust.render.NestedChange children = 3;</code>
       */
      public Builder addChildren(
          locust.render.Render.NestedChange.Builder builderForValue) {
        if (childrenBuilder_ == null) {
          ensureChildrenIsMutable();
          children_.add(builderForValue.build());
          onChanged();
        } else {
          childrenBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .locust.render.NestedChange children = 3;</code>
       */
      public Builder addChildren(
          int index, locust.render.Render.NestedChange.Builder builderForValue) {
        if (childrenBuilder_ == null) {
          ensureChildrenIsMutable();
          children_.add(index, builderForValue.build());
          onChanged();
        } else {
          childrenBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .locust.render.NestedChange children = 3;</code>
       */
      public Builder addAllChildren(
          java.lang.Iterable<? extends locust.render.Render.NestedChange> values) {
        if (childrenBuilder_ == null) {
          ensureChildrenIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, children_);
          onChanged();
        } else {
          childrenBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .locust.render.NestedChange children = 3;</code>
       */
      public Builder clearChildren() {
        if (childrenBuilder_ == null) {
          children_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          childrenBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .locust.render.NestedChange children = 3;</code>
       */
      public Builder removeChildren(int index) {
        if (childrenBuilder_ == null) {
          ensureChildrenIsMutable();
          children_.remove(index);
          onChanged();
        } else {
          childrenBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .locust.render.NestedChange children = 3;</code>
       */
      public locust.render.Render.NestedChange.Builder getChildrenBuilder(
          int index) {
        return getChildrenFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .locust.render.NestedChange children = 3;</code>
       */
      public locust.render.Render.NestedChangeOrBuilder getChildrenOrBuilder(
          int index) {
        if (childrenBuilder_ == null) {
          return children_.get(index);  } else {
          return childrenBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .locust.render.NestedChange children = 3;</code>
       */
      public java.util.List<? extends locust.render.Render.NestedChangeOrBuilder> 
           getChildrenOrBuilderList() {
        if (childrenBuilder_ != null) {
          return childrenBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(children_);
        }
      }
      /**
       * <code>repeated .locust.render.NestedChange children = 3;</code>
       */
      public locust.render.Render.NestedChange.Builder addChildrenBuilder() {
        return getChildrenFieldBuilder().addBuilder(
            locust.render.Render.NestedChange.getDefaultInstance());
      }
      /**
       * <code>repeated .locust.render.NestedChange children = 3;</code>
       */
      public locust.render.Render.NestedChange.Builder addChildrenBuilder(
          int index) {
        return getChildrenFieldBuilder().addBuilder(
            index, locust.render.Render.NestedChange.getDefaultInstance());
      }
      /**
       * <code>repeated .locust.render.NestedChange children = 3;</code>
       */
      public java.util.List<locust.render.Render.NestedChange.Builder> 
           getChildrenBuilderList() {
        return getChildrenFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          locust.render.Render.NestedChange, locust.render.Render.NestedChange.Builder, locust.render.Render.NestedChangeOrBuilder> 
          getChildrenFieldBuilder() {
        if (childrenBuilder_ == null) {
          childrenBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              locust.render.Render.NestedChange, locust.render.Render.NestedChange.Builder, locust.render.Render.NestedChangeOrBuilder>(
                  children_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          children_ = null;
        }
        return childrenBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:locust.render.NestedChange)
    }

    // @@protoc_insertion_point(class_scope:locust.render.NestedChange)
    private static final locust.render.Render.NestedChange DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new locust.render.Render.NestedChange();
    }

    public static locust.render.Render.NestedChange getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<NestedChange>
        PARSER = new com.google.protobuf.AbstractParser<NestedChange>() {
      @java.lang.Override
      public NestedChange parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new NestedChange(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<NestedChange> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<NestedChange> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public locust.render.Render.NestedChange getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_locust_render_IndexKey_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_locust_render_IndexKey_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_locust_render_NestedChange_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_locust_render_NestedChange_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\014render.proto\022\rlocust.render\032\013parse.pro" +
      "to\"J\n\010IndexKey\022\020\n\010filepath\030\001 \001(\t\022\014\n\004name" +
      "\030\002 \001(\t\022\014\n\004line\030\003 \001(\005\022\020\n\010revision\030\004 \001(\t\"\217" +
      "\001\n\014NestedChange\022$\n\003key\030\001 \001(\0132\027.locust.re" +
      "nder.IndexKey\022*\n\006change\030\002 \001(\0132\032.locust.p" +
      "arse.LocustChange\022-\n\010children\030\003 \003(\0132\033.lo" +
      "cust.render.NestedChangeb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          locust.parse.Parse.getDescriptor(),
        });
    internal_static_locust_render_IndexKey_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_locust_render_IndexKey_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_locust_render_IndexKey_descriptor,
        new java.lang.String[] { "Filepath", "Name", "Line", "Revision", });
    internal_static_locust_render_NestedChange_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_locust_render_NestedChange_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_locust_render_NestedChange_descriptor,
        new java.lang.String[] { "Key", "Change", "Children", });
    locust.parse.Parse.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
