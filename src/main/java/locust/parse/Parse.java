// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: parse.proto

package locust.parse;

public final class Parse {
  private Parse() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface DefinitionParentOrBuilder extends
      // @@protoc_insertion_point(interface_extends:locust.parse.DefinitionParent)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string name = 1;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>int32 line = 2;</code>
     * @return The line.
     */
    int getLine();
  }
  /**
   * Protobuf type {@code locust.parse.DefinitionParent}
   */
  public static final class DefinitionParent extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:locust.parse.DefinitionParent)
      DefinitionParentOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DefinitionParent.newBuilder() to construct.
    private DefinitionParent(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DefinitionParent() {
      name_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new DefinitionParent();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DefinitionParent(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 16: {

              line_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return locust.parse.Parse.internal_static_locust_parse_DefinitionParent_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return locust.parse.Parse.internal_static_locust_parse_DefinitionParent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              locust.parse.Parse.DefinitionParent.class, locust.parse.Parse.DefinitionParent.Builder.class);
    }

    public static final int NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object name_;
    /**
     * <code>string name = 1;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LINE_FIELD_NUMBER = 2;
    private int line_;
    /**
     * <code>int32 line = 2;</code>
     * @return The line.
     */
    @java.lang.Override
    public int getLine() {
      return line_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (line_ != 0) {
        output.writeInt32(2, line_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      if (line_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, line_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof locust.parse.Parse.DefinitionParent)) {
        return super.equals(obj);
      }
      locust.parse.Parse.DefinitionParent other = (locust.parse.Parse.DefinitionParent) obj;

      if (!getName()
          .equals(other.getName())) return false;
      if (getLine()
          != other.getLine()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + LINE_FIELD_NUMBER;
      hash = (53 * hash) + getLine();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static locust.parse.Parse.DefinitionParent parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static locust.parse.Parse.DefinitionParent parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static locust.parse.Parse.DefinitionParent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static locust.parse.Parse.DefinitionParent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static locust.parse.Parse.DefinitionParent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static locust.parse.Parse.DefinitionParent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static locust.parse.Parse.DefinitionParent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static locust.parse.Parse.DefinitionParent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static locust.parse.Parse.DefinitionParent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static locust.parse.Parse.DefinitionParent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static locust.parse.Parse.DefinitionParent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static locust.parse.Parse.DefinitionParent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(locust.parse.Parse.DefinitionParent prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code locust.parse.DefinitionParent}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:locust.parse.DefinitionParent)
        locust.parse.Parse.DefinitionParentOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return locust.parse.Parse.internal_static_locust_parse_DefinitionParent_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return locust.parse.Parse.internal_static_locust_parse_DefinitionParent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                locust.parse.Parse.DefinitionParent.class, locust.parse.Parse.DefinitionParent.Builder.class);
      }

      // Construct using locust.parse.Parse.DefinitionParent.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        name_ = "";

        line_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return locust.parse.Parse.internal_static_locust_parse_DefinitionParent_descriptor;
      }

      @java.lang.Override
      public locust.parse.Parse.DefinitionParent getDefaultInstanceForType() {
        return locust.parse.Parse.DefinitionParent.getDefaultInstance();
      }

      @java.lang.Override
      public locust.parse.Parse.DefinitionParent build() {
        locust.parse.Parse.DefinitionParent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public locust.parse.Parse.DefinitionParent buildPartial() {
        locust.parse.Parse.DefinitionParent result = new locust.parse.Parse.DefinitionParent(this);
        result.name_ = name_;
        result.line_ = line_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof locust.parse.Parse.DefinitionParent) {
          return mergeFrom((locust.parse.Parse.DefinitionParent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(locust.parse.Parse.DefinitionParent other) {
        if (other == locust.parse.Parse.DefinitionParent.getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (other.getLine() != 0) {
          setLine(other.getLine());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        locust.parse.Parse.DefinitionParent parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (locust.parse.Parse.DefinitionParent) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <code>string name = 1;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string name = 1;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string name = 1;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private int line_ ;
      /**
       * <code>int32 line = 2;</code>
       * @return The line.
       */
      @java.lang.Override
      public int getLine() {
        return line_;
      }
      /**
       * <code>int32 line = 2;</code>
       * @param value The line to set.
       * @return This builder for chaining.
       */
      public Builder setLine(int value) {
        
        line_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 line = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearLine() {
        
        line_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:locust.parse.DefinitionParent)
    }

    // @@protoc_insertion_point(class_scope:locust.parse.DefinitionParent)
    private static final locust.parse.Parse.DefinitionParent DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new locust.parse.Parse.DefinitionParent();
    }

    public static locust.parse.Parse.DefinitionParent getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DefinitionParent>
        PARSER = new com.google.protobuf.AbstractParser<DefinitionParent>() {
      @java.lang.Override
      public DefinitionParent parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DefinitionParent(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DefinitionParent> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DefinitionParent> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public locust.parse.Parse.DefinitionParent getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RawDefinitionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:locust.parse.RawDefinition)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string name = 1;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>string change_type = 2;</code>
     * @return The changeType.
     */
    java.lang.String getChangeType();
    /**
     * <code>string change_type = 2;</code>
     * @return The bytes for changeType.
     */
    com.google.protobuf.ByteString
        getChangeTypeBytes();

    /**
     * <code>int32 line = 3;</code>
     * @return The line.
     */
    int getLine();

    /**
     * <code>int32 offset = 4;</code>
     * @return The offset.
     */
    int getOffset();

    /**
     * <code>int32 end_line = 5;</code>
     * @return The endLine.
     */
    int getEndLine();

    /**
     * <code>int32 end_offset = 6;</code>
     * @return The endOffset.
     */
    int getEndOffset();

    /**
     * <code>.locust.parse.DefinitionParent parent = 7;</code>
     * @return Whether the parent field is set.
     */
    boolean hasParent();
    /**
     * <code>.locust.parse.DefinitionParent parent = 7;</code>
     * @return The parent.
     */
    locust.parse.Parse.DefinitionParent getParent();
    /**
     * <code>.locust.parse.DefinitionParent parent = 7;</code>
     */
    locust.parse.Parse.DefinitionParentOrBuilder getParentOrBuilder();
  }
  /**
   * Protobuf type {@code locust.parse.RawDefinition}
   */
  public static final class RawDefinition extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:locust.parse.RawDefinition)
      RawDefinitionOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RawDefinition.newBuilder() to construct.
    private RawDefinition(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RawDefinition() {
      name_ = "";
      changeType_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new RawDefinition();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RawDefinition(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              changeType_ = s;
              break;
            }
            case 24: {

              line_ = input.readInt32();
              break;
            }
            case 32: {

              offset_ = input.readInt32();
              break;
            }
            case 40: {

              endLine_ = input.readInt32();
              break;
            }
            case 48: {

              endOffset_ = input.readInt32();
              break;
            }
            case 58: {
              locust.parse.Parse.DefinitionParent.Builder subBuilder = null;
              if (parent_ != null) {
                subBuilder = parent_.toBuilder();
              }
              parent_ = input.readMessage(locust.parse.Parse.DefinitionParent.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(parent_);
                parent_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return locust.parse.Parse.internal_static_locust_parse_RawDefinition_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return locust.parse.Parse.internal_static_locust_parse_RawDefinition_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              locust.parse.Parse.RawDefinition.class, locust.parse.Parse.RawDefinition.Builder.class);
    }

    public static final int NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object name_;
    /**
     * <code>string name = 1;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CHANGE_TYPE_FIELD_NUMBER = 2;
    private volatile java.lang.Object changeType_;
    /**
     * <code>string change_type = 2;</code>
     * @return The changeType.
     */
    @java.lang.Override
    public java.lang.String getChangeType() {
      java.lang.Object ref = changeType_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        changeType_ = s;
        return s;
      }
    }
    /**
     * <code>string change_type = 2;</code>
     * @return The bytes for changeType.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getChangeTypeBytes() {
      java.lang.Object ref = changeType_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        changeType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LINE_FIELD_NUMBER = 3;
    private int line_;
    /**
     * <code>int32 line = 3;</code>
     * @return The line.
     */
    @java.lang.Override
    public int getLine() {
      return line_;
    }

    public static final int OFFSET_FIELD_NUMBER = 4;
    private int offset_;
    /**
     * <code>int32 offset = 4;</code>
     * @return The offset.
     */
    @java.lang.Override
    public int getOffset() {
      return offset_;
    }

    public static final int END_LINE_FIELD_NUMBER = 5;
    private int endLine_;
    /**
     * <code>int32 end_line = 5;</code>
     * @return The endLine.
     */
    @java.lang.Override
    public int getEndLine() {
      return endLine_;
    }

    public static final int END_OFFSET_FIELD_NUMBER = 6;
    private int endOffset_;
    /**
     * <code>int32 end_offset = 6;</code>
     * @return The endOffset.
     */
    @java.lang.Override
    public int getEndOffset() {
      return endOffset_;
    }

    public static final int PARENT_FIELD_NUMBER = 7;
    private locust.parse.Parse.DefinitionParent parent_;
    /**
     * <code>.locust.parse.DefinitionParent parent = 7;</code>
     * @return Whether the parent field is set.
     */
    @java.lang.Override
    public boolean hasParent() {
      return parent_ != null;
    }
    /**
     * <code>.locust.parse.DefinitionParent parent = 7;</code>
     * @return The parent.
     */
    @java.lang.Override
    public locust.parse.Parse.DefinitionParent getParent() {
      return parent_ == null ? locust.parse.Parse.DefinitionParent.getDefaultInstance() : parent_;
    }
    /**
     * <code>.locust.parse.DefinitionParent parent = 7;</code>
     */
    @java.lang.Override
    public locust.parse.Parse.DefinitionParentOrBuilder getParentOrBuilder() {
      return getParent();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (!getChangeTypeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, changeType_);
      }
      if (line_ != 0) {
        output.writeInt32(3, line_);
      }
      if (offset_ != 0) {
        output.writeInt32(4, offset_);
      }
      if (endLine_ != 0) {
        output.writeInt32(5, endLine_);
      }
      if (endOffset_ != 0) {
        output.writeInt32(6, endOffset_);
      }
      if (parent_ != null) {
        output.writeMessage(7, getParent());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      if (!getChangeTypeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, changeType_);
      }
      if (line_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, line_);
      }
      if (offset_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, offset_);
      }
      if (endLine_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, endLine_);
      }
      if (endOffset_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, endOffset_);
      }
      if (parent_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getParent());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof locust.parse.Parse.RawDefinition)) {
        return super.equals(obj);
      }
      locust.parse.Parse.RawDefinition other = (locust.parse.Parse.RawDefinition) obj;

      if (!getName()
          .equals(other.getName())) return false;
      if (!getChangeType()
          .equals(other.getChangeType())) return false;
      if (getLine()
          != other.getLine()) return false;
      if (getOffset()
          != other.getOffset()) return false;
      if (getEndLine()
          != other.getEndLine()) return false;
      if (getEndOffset()
          != other.getEndOffset()) return false;
      if (hasParent() != other.hasParent()) return false;
      if (hasParent()) {
        if (!getParent()
            .equals(other.getParent())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + CHANGE_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getChangeType().hashCode();
      hash = (37 * hash) + LINE_FIELD_NUMBER;
      hash = (53 * hash) + getLine();
      hash = (37 * hash) + OFFSET_FIELD_NUMBER;
      hash = (53 * hash) + getOffset();
      hash = (37 * hash) + END_LINE_FIELD_NUMBER;
      hash = (53 * hash) + getEndLine();
      hash = (37 * hash) + END_OFFSET_FIELD_NUMBER;
      hash = (53 * hash) + getEndOffset();
      if (hasParent()) {
        hash = (37 * hash) + PARENT_FIELD_NUMBER;
        hash = (53 * hash) + getParent().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static locust.parse.Parse.RawDefinition parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static locust.parse.Parse.RawDefinition parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static locust.parse.Parse.RawDefinition parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static locust.parse.Parse.RawDefinition parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static locust.parse.Parse.RawDefinition parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static locust.parse.Parse.RawDefinition parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static locust.parse.Parse.RawDefinition parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static locust.parse.Parse.RawDefinition parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static locust.parse.Parse.RawDefinition parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static locust.parse.Parse.RawDefinition parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static locust.parse.Parse.RawDefinition parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static locust.parse.Parse.RawDefinition parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(locust.parse.Parse.RawDefinition prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code locust.parse.RawDefinition}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:locust.parse.RawDefinition)
        locust.parse.Parse.RawDefinitionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return locust.parse.Parse.internal_static_locust_parse_RawDefinition_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return locust.parse.Parse.internal_static_locust_parse_RawDefinition_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                locust.parse.Parse.RawDefinition.class, locust.parse.Parse.RawDefinition.Builder.class);
      }

      // Construct using locust.parse.Parse.RawDefinition.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        name_ = "";

        changeType_ = "";

        line_ = 0;

        offset_ = 0;

        endLine_ = 0;

        endOffset_ = 0;

        if (parentBuilder_ == null) {
          parent_ = null;
        } else {
          parent_ = null;
          parentBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return locust.parse.Parse.internal_static_locust_parse_RawDefinition_descriptor;
      }

      @java.lang.Override
      public locust.parse.Parse.RawDefinition getDefaultInstanceForType() {
        return locust.parse.Parse.RawDefinition.getDefaultInstance();
      }

      @java.lang.Override
      public locust.parse.Parse.RawDefinition build() {
        locust.parse.Parse.RawDefinition result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public locust.parse.Parse.RawDefinition buildPartial() {
        locust.parse.Parse.RawDefinition result = new locust.parse.Parse.RawDefinition(this);
        result.name_ = name_;
        result.changeType_ = changeType_;
        result.line_ = line_;
        result.offset_ = offset_;
        result.endLine_ = endLine_;
        result.endOffset_ = endOffset_;
        if (parentBuilder_ == null) {
          result.parent_ = parent_;
        } else {
          result.parent_ = parentBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof locust.parse.Parse.RawDefinition) {
          return mergeFrom((locust.parse.Parse.RawDefinition)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(locust.parse.Parse.RawDefinition other) {
        if (other == locust.parse.Parse.RawDefinition.getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (!other.getChangeType().isEmpty()) {
          changeType_ = other.changeType_;
          onChanged();
        }
        if (other.getLine() != 0) {
          setLine(other.getLine());
        }
        if (other.getOffset() != 0) {
          setOffset(other.getOffset());
        }
        if (other.getEndLine() != 0) {
          setEndLine(other.getEndLine());
        }
        if (other.getEndOffset() != 0) {
          setEndOffset(other.getEndOffset());
        }
        if (other.hasParent()) {
          mergeParent(other.getParent());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        locust.parse.Parse.RawDefinition parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (locust.parse.Parse.RawDefinition) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <code>string name = 1;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string name = 1;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string name = 1;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object changeType_ = "";
      /**
       * <code>string change_type = 2;</code>
       * @return The changeType.
       */
      public java.lang.String getChangeType() {
        java.lang.Object ref = changeType_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          changeType_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string change_type = 2;</code>
       * @return The bytes for changeType.
       */
      public com.google.protobuf.ByteString
          getChangeTypeBytes() {
        java.lang.Object ref = changeType_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          changeType_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string change_type = 2;</code>
       * @param value The changeType to set.
       * @return This builder for chaining.
       */
      public Builder setChangeType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        changeType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string change_type = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearChangeType() {
        
        changeType_ = getDefaultInstance().getChangeType();
        onChanged();
        return this;
      }
      /**
       * <code>string change_type = 2;</code>
       * @param value The bytes for changeType to set.
       * @return This builder for chaining.
       */
      public Builder setChangeTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        changeType_ = value;
        onChanged();
        return this;
      }

      private int line_ ;
      /**
       * <code>int32 line = 3;</code>
       * @return The line.
       */
      @java.lang.Override
      public int getLine() {
        return line_;
      }
      /**
       * <code>int32 line = 3;</code>
       * @param value The line to set.
       * @return This builder for chaining.
       */
      public Builder setLine(int value) {
        
        line_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 line = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearLine() {
        
        line_ = 0;
        onChanged();
        return this;
      }

      private int offset_ ;
      /**
       * <code>int32 offset = 4;</code>
       * @return The offset.
       */
      @java.lang.Override
      public int getOffset() {
        return offset_;
      }
      /**
       * <code>int32 offset = 4;</code>
       * @param value The offset to set.
       * @return This builder for chaining.
       */
      public Builder setOffset(int value) {
        
        offset_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 offset = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearOffset() {
        
        offset_ = 0;
        onChanged();
        return this;
      }

      private int endLine_ ;
      /**
       * <code>int32 end_line = 5;</code>
       * @return The endLine.
       */
      @java.lang.Override
      public int getEndLine() {
        return endLine_;
      }
      /**
       * <code>int32 end_line = 5;</code>
       * @param value The endLine to set.
       * @return This builder for chaining.
       */
      public Builder setEndLine(int value) {
        
        endLine_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 end_line = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearEndLine() {
        
        endLine_ = 0;
        onChanged();
        return this;
      }

      private int endOffset_ ;
      /**
       * <code>int32 end_offset = 6;</code>
       * @return The endOffset.
       */
      @java.lang.Override
      public int getEndOffset() {
        return endOffset_;
      }
      /**
       * <code>int32 end_offset = 6;</code>
       * @param value The endOffset to set.
       * @return This builder for chaining.
       */
      public Builder setEndOffset(int value) {
        
        endOffset_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 end_offset = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearEndOffset() {
        
        endOffset_ = 0;
        onChanged();
        return this;
      }

      private locust.parse.Parse.DefinitionParent parent_;
      private com.google.protobuf.SingleFieldBuilderV3<
          locust.parse.Parse.DefinitionParent, locust.parse.Parse.DefinitionParent.Builder, locust.parse.Parse.DefinitionParentOrBuilder> parentBuilder_;
      /**
       * <code>.locust.parse.DefinitionParent parent = 7;</code>
       * @return Whether the parent field is set.
       */
      public boolean hasParent() {
        return parentBuilder_ != null || parent_ != null;
      }
      /**
       * <code>.locust.parse.DefinitionParent parent = 7;</code>
       * @return The parent.
       */
      public locust.parse.Parse.DefinitionParent getParent() {
        if (parentBuilder_ == null) {
          return parent_ == null ? locust.parse.Parse.DefinitionParent.getDefaultInstance() : parent_;
        } else {
          return parentBuilder_.getMessage();
        }
      }
      /**
       * <code>.locust.parse.DefinitionParent parent = 7;</code>
       */
      public Builder setParent(locust.parse.Parse.DefinitionParent value) {
        if (parentBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          parent_ = value;
          onChanged();
        } else {
          parentBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.locust.parse.DefinitionParent parent = 7;</code>
       */
      public Builder setParent(
          locust.parse.Parse.DefinitionParent.Builder builderForValue) {
        if (parentBuilder_ == null) {
          parent_ = builderForValue.build();
          onChanged();
        } else {
          parentBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.locust.parse.DefinitionParent parent = 7;</code>
       */
      public Builder mergeParent(locust.parse.Parse.DefinitionParent value) {
        if (parentBuilder_ == null) {
          if (parent_ != null) {
            parent_ =
              locust.parse.Parse.DefinitionParent.newBuilder(parent_).mergeFrom(value).buildPartial();
          } else {
            parent_ = value;
          }
          onChanged();
        } else {
          parentBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.locust.parse.DefinitionParent parent = 7;</code>
       */
      public Builder clearParent() {
        if (parentBuilder_ == null) {
          parent_ = null;
          onChanged();
        } else {
          parent_ = null;
          parentBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.locust.parse.DefinitionParent parent = 7;</code>
       */
      public locust.parse.Parse.DefinitionParent.Builder getParentBuilder() {
        
        onChanged();
        return getParentFieldBuilder().getBuilder();
      }
      /**
       * <code>.locust.parse.DefinitionParent parent = 7;</code>
       */
      public locust.parse.Parse.DefinitionParentOrBuilder getParentOrBuilder() {
        if (parentBuilder_ != null) {
          return parentBuilder_.getMessageOrBuilder();
        } else {
          return parent_ == null ?
              locust.parse.Parse.DefinitionParent.getDefaultInstance() : parent_;
        }
      }
      /**
       * <code>.locust.parse.DefinitionParent parent = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          locust.parse.Parse.DefinitionParent, locust.parse.Parse.DefinitionParent.Builder, locust.parse.Parse.DefinitionParentOrBuilder> 
          getParentFieldBuilder() {
        if (parentBuilder_ == null) {
          parentBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              locust.parse.Parse.DefinitionParent, locust.parse.Parse.DefinitionParent.Builder, locust.parse.Parse.DefinitionParentOrBuilder>(
                  getParent(),
                  getParentForChildren(),
                  isClean());
          parent_ = null;
        }
        return parentBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:locust.parse.RawDefinition)
    }

    // @@protoc_insertion_point(class_scope:locust.parse.RawDefinition)
    private static final locust.parse.Parse.RawDefinition DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new locust.parse.Parse.RawDefinition();
    }

    public static locust.parse.Parse.RawDefinition getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RawDefinition>
        PARSER = new com.google.protobuf.AbstractParser<RawDefinition>() {
      @java.lang.Override
      public RawDefinition parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RawDefinition(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RawDefinition> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RawDefinition> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public locust.parse.Parse.RawDefinition getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface LocustChangeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:locust.parse.LocustChange)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string name = 1;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>string change_type = 2;</code>
     * @return The changeType.
     */
    java.lang.String getChangeType();
    /**
     * <code>string change_type = 2;</code>
     * @return The bytes for changeType.
     */
    com.google.protobuf.ByteString
        getChangeTypeBytes();

    /**
     * <code>string filepath = 3;</code>
     * @return The filepath.
     */
    java.lang.String getFilepath();
    /**
     * <code>string filepath = 3;</code>
     * @return The bytes for filepath.
     */
    com.google.protobuf.ByteString
        getFilepathBytes();

    /**
     * <code>string revision = 4;</code>
     * @return The revision.
     */
    java.lang.String getRevision();
    /**
     * <code>string revision = 4;</code>
     * @return The bytes for revision.
     */
    com.google.protobuf.ByteString
        getRevisionBytes();

    /**
     * <code>int32 line = 5;</code>
     * @return The line.
     */
    int getLine();

    /**
     * <code>int32 changed_lines = 6;</code>
     * @return The changedLines.
     */
    int getChangedLines();

    /**
     * <code>int32 total_lines = 7;</code>
     * @return The totalLines.
     */
    int getTotalLines();

    /**
     * <code>.locust.parse.DefinitionParent parent = 8;</code>
     * @return Whether the parent field is set.
     */
    boolean hasParent();
    /**
     * <code>.locust.parse.DefinitionParent parent = 8;</code>
     * @return The parent.
     */
    locust.parse.Parse.DefinitionParent getParent();
    /**
     * <code>.locust.parse.DefinitionParent parent = 8;</code>
     */
    locust.parse.Parse.DefinitionParentOrBuilder getParentOrBuilder();
  }
  /**
   * Protobuf type {@code locust.parse.LocustChange}
   */
  public static final class LocustChange extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:locust.parse.LocustChange)
      LocustChangeOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use LocustChange.newBuilder() to construct.
    private LocustChange(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private LocustChange() {
      name_ = "";
      changeType_ = "";
      filepath_ = "";
      revision_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new LocustChange();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private LocustChange(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              changeType_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              filepath_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              revision_ = s;
              break;
            }
            case 40: {

              line_ = input.readInt32();
              break;
            }
            case 48: {

              changedLines_ = input.readInt32();
              break;
            }
            case 56: {

              totalLines_ = input.readInt32();
              break;
            }
            case 66: {
              locust.parse.Parse.DefinitionParent.Builder subBuilder = null;
              if (parent_ != null) {
                subBuilder = parent_.toBuilder();
              }
              parent_ = input.readMessage(locust.parse.Parse.DefinitionParent.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(parent_);
                parent_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return locust.parse.Parse.internal_static_locust_parse_LocustChange_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return locust.parse.Parse.internal_static_locust_parse_LocustChange_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              locust.parse.Parse.LocustChange.class, locust.parse.Parse.LocustChange.Builder.class);
    }

    public static final int NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object name_;
    /**
     * <code>string name = 1;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CHANGE_TYPE_FIELD_NUMBER = 2;
    private volatile java.lang.Object changeType_;
    /**
     * <code>string change_type = 2;</code>
     * @return The changeType.
     */
    @java.lang.Override
    public java.lang.String getChangeType() {
      java.lang.Object ref = changeType_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        changeType_ = s;
        return s;
      }
    }
    /**
     * <code>string change_type = 2;</code>
     * @return The bytes for changeType.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getChangeTypeBytes() {
      java.lang.Object ref = changeType_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        changeType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FILEPATH_FIELD_NUMBER = 3;
    private volatile java.lang.Object filepath_;
    /**
     * <code>string filepath = 3;</code>
     * @return The filepath.
     */
    @java.lang.Override
    public java.lang.String getFilepath() {
      java.lang.Object ref = filepath_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        filepath_ = s;
        return s;
      }
    }
    /**
     * <code>string filepath = 3;</code>
     * @return The bytes for filepath.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getFilepathBytes() {
      java.lang.Object ref = filepath_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        filepath_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int REVISION_FIELD_NUMBER = 4;
    private volatile java.lang.Object revision_;
    /**
     * <code>string revision = 4;</code>
     * @return The revision.
     */
    @java.lang.Override
    public java.lang.String getRevision() {
      java.lang.Object ref = revision_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        revision_ = s;
        return s;
      }
    }
    /**
     * <code>string revision = 4;</code>
     * @return The bytes for revision.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getRevisionBytes() {
      java.lang.Object ref = revision_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        revision_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LINE_FIELD_NUMBER = 5;
    private int line_;
    /**
     * <code>int32 line = 5;</code>
     * @return The line.
     */
    @java.lang.Override
    public int getLine() {
      return line_;
    }

    public static final int CHANGED_LINES_FIELD_NUMBER = 6;
    private int changedLines_;
    /**
     * <code>int32 changed_lines = 6;</code>
     * @return The changedLines.
     */
    @java.lang.Override
    public int getChangedLines() {
      return changedLines_;
    }

    public static final int TOTAL_LINES_FIELD_NUMBER = 7;
    private int totalLines_;
    /**
     * <code>int32 total_lines = 7;</code>
     * @return The totalLines.
     */
    @java.lang.Override
    public int getTotalLines() {
      return totalLines_;
    }

    public static final int PARENT_FIELD_NUMBER = 8;
    private locust.parse.Parse.DefinitionParent parent_;
    /**
     * <code>.locust.parse.DefinitionParent parent = 8;</code>
     * @return Whether the parent field is set.
     */
    @java.lang.Override
    public boolean hasParent() {
      return parent_ != null;
    }
    /**
     * <code>.locust.parse.DefinitionParent parent = 8;</code>
     * @return The parent.
     */
    @java.lang.Override
    public locust.parse.Parse.DefinitionParent getParent() {
      return parent_ == null ? locust.parse.Parse.DefinitionParent.getDefaultInstance() : parent_;
    }
    /**
     * <code>.locust.parse.DefinitionParent parent = 8;</code>
     */
    @java.lang.Override
    public locust.parse.Parse.DefinitionParentOrBuilder getParentOrBuilder() {
      return getParent();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (!getChangeTypeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, changeType_);
      }
      if (!getFilepathBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, filepath_);
      }
      if (!getRevisionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, revision_);
      }
      if (line_ != 0) {
        output.writeInt32(5, line_);
      }
      if (changedLines_ != 0) {
        output.writeInt32(6, changedLines_);
      }
      if (totalLines_ != 0) {
        output.writeInt32(7, totalLines_);
      }
      if (parent_ != null) {
        output.writeMessage(8, getParent());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      if (!getChangeTypeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, changeType_);
      }
      if (!getFilepathBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, filepath_);
      }
      if (!getRevisionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, revision_);
      }
      if (line_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, line_);
      }
      if (changedLines_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, changedLines_);
      }
      if (totalLines_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, totalLines_);
      }
      if (parent_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getParent());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof locust.parse.Parse.LocustChange)) {
        return super.equals(obj);
      }
      locust.parse.Parse.LocustChange other = (locust.parse.Parse.LocustChange) obj;

      if (!getName()
          .equals(other.getName())) return false;
      if (!getChangeType()
          .equals(other.getChangeType())) return false;
      if (!getFilepath()
          .equals(other.getFilepath())) return false;
      if (!getRevision()
          .equals(other.getRevision())) return false;
      if (getLine()
          != other.getLine()) return false;
      if (getChangedLines()
          != other.getChangedLines()) return false;
      if (getTotalLines()
          != other.getTotalLines()) return false;
      if (hasParent() != other.hasParent()) return false;
      if (hasParent()) {
        if (!getParent()
            .equals(other.getParent())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + CHANGE_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getChangeType().hashCode();
      hash = (37 * hash) + FILEPATH_FIELD_NUMBER;
      hash = (53 * hash) + getFilepath().hashCode();
      hash = (37 * hash) + REVISION_FIELD_NUMBER;
      hash = (53 * hash) + getRevision().hashCode();
      hash = (37 * hash) + LINE_FIELD_NUMBER;
      hash = (53 * hash) + getLine();
      hash = (37 * hash) + CHANGED_LINES_FIELD_NUMBER;
      hash = (53 * hash) + getChangedLines();
      hash = (37 * hash) + TOTAL_LINES_FIELD_NUMBER;
      hash = (53 * hash) + getTotalLines();
      if (hasParent()) {
        hash = (37 * hash) + PARENT_FIELD_NUMBER;
        hash = (53 * hash) + getParent().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static locust.parse.Parse.LocustChange parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static locust.parse.Parse.LocustChange parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static locust.parse.Parse.LocustChange parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static locust.parse.Parse.LocustChange parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static locust.parse.Parse.LocustChange parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static locust.parse.Parse.LocustChange parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static locust.parse.Parse.LocustChange parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static locust.parse.Parse.LocustChange parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static locust.parse.Parse.LocustChange parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static locust.parse.Parse.LocustChange parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static locust.parse.Parse.LocustChange parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static locust.parse.Parse.LocustChange parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(locust.parse.Parse.LocustChange prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code locust.parse.LocustChange}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:locust.parse.LocustChange)
        locust.parse.Parse.LocustChangeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return locust.parse.Parse.internal_static_locust_parse_LocustChange_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return locust.parse.Parse.internal_static_locust_parse_LocustChange_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                locust.parse.Parse.LocustChange.class, locust.parse.Parse.LocustChange.Builder.class);
      }

      // Construct using locust.parse.Parse.LocustChange.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        name_ = "";

        changeType_ = "";

        filepath_ = "";

        revision_ = "";

        line_ = 0;

        changedLines_ = 0;

        totalLines_ = 0;

        if (parentBuilder_ == null) {
          parent_ = null;
        } else {
          parent_ = null;
          parentBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return locust.parse.Parse.internal_static_locust_parse_LocustChange_descriptor;
      }

      @java.lang.Override
      public locust.parse.Parse.LocustChange getDefaultInstanceForType() {
        return locust.parse.Parse.LocustChange.getDefaultInstance();
      }

      @java.lang.Override
      public locust.parse.Parse.LocustChange build() {
        locust.parse.Parse.LocustChange result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public locust.parse.Parse.LocustChange buildPartial() {
        locust.parse.Parse.LocustChange result = new locust.parse.Parse.LocustChange(this);
        result.name_ = name_;
        result.changeType_ = changeType_;
        result.filepath_ = filepath_;
        result.revision_ = revision_;
        result.line_ = line_;
        result.changedLines_ = changedLines_;
        result.totalLines_ = totalLines_;
        if (parentBuilder_ == null) {
          result.parent_ = parent_;
        } else {
          result.parent_ = parentBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof locust.parse.Parse.LocustChange) {
          return mergeFrom((locust.parse.Parse.LocustChange)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(locust.parse.Parse.LocustChange other) {
        if (other == locust.parse.Parse.LocustChange.getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (!other.getChangeType().isEmpty()) {
          changeType_ = other.changeType_;
          onChanged();
        }
        if (!other.getFilepath().isEmpty()) {
          filepath_ = other.filepath_;
          onChanged();
        }
        if (!other.getRevision().isEmpty()) {
          revision_ = other.revision_;
          onChanged();
        }
        if (other.getLine() != 0) {
          setLine(other.getLine());
        }
        if (other.getChangedLines() != 0) {
          setChangedLines(other.getChangedLines());
        }
        if (other.getTotalLines() != 0) {
          setTotalLines(other.getTotalLines());
        }
        if (other.hasParent()) {
          mergeParent(other.getParent());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        locust.parse.Parse.LocustChange parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (locust.parse.Parse.LocustChange) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <code>string name = 1;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string name = 1;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string name = 1;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object changeType_ = "";
      /**
       * <code>string change_type = 2;</code>
       * @return The changeType.
       */
      public java.lang.String getChangeType() {
        java.lang.Object ref = changeType_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          changeType_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string change_type = 2;</code>
       * @return The bytes for changeType.
       */
      public com.google.protobuf.ByteString
          getChangeTypeBytes() {
        java.lang.Object ref = changeType_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          changeType_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string change_type = 2;</code>
       * @param value The changeType to set.
       * @return This builder for chaining.
       */
      public Builder setChangeType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        changeType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string change_type = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearChangeType() {
        
        changeType_ = getDefaultInstance().getChangeType();
        onChanged();
        return this;
      }
      /**
       * <code>string change_type = 2;</code>
       * @param value The bytes for changeType to set.
       * @return This builder for chaining.
       */
      public Builder setChangeTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        changeType_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object filepath_ = "";
      /**
       * <code>string filepath = 3;</code>
       * @return The filepath.
       */
      public java.lang.String getFilepath() {
        java.lang.Object ref = filepath_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          filepath_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string filepath = 3;</code>
       * @return The bytes for filepath.
       */
      public com.google.protobuf.ByteString
          getFilepathBytes() {
        java.lang.Object ref = filepath_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          filepath_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string filepath = 3;</code>
       * @param value The filepath to set.
       * @return This builder for chaining.
       */
      public Builder setFilepath(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        filepath_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string filepath = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearFilepath() {
        
        filepath_ = getDefaultInstance().getFilepath();
        onChanged();
        return this;
      }
      /**
       * <code>string filepath = 3;</code>
       * @param value The bytes for filepath to set.
       * @return This builder for chaining.
       */
      public Builder setFilepathBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        filepath_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object revision_ = "";
      /**
       * <code>string revision = 4;</code>
       * @return The revision.
       */
      public java.lang.String getRevision() {
        java.lang.Object ref = revision_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          revision_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string revision = 4;</code>
       * @return The bytes for revision.
       */
      public com.google.protobuf.ByteString
          getRevisionBytes() {
        java.lang.Object ref = revision_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          revision_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string revision = 4;</code>
       * @param value The revision to set.
       * @return This builder for chaining.
       */
      public Builder setRevision(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        revision_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string revision = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearRevision() {
        
        revision_ = getDefaultInstance().getRevision();
        onChanged();
        return this;
      }
      /**
       * <code>string revision = 4;</code>
       * @param value The bytes for revision to set.
       * @return This builder for chaining.
       */
      public Builder setRevisionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        revision_ = value;
        onChanged();
        return this;
      }

      private int line_ ;
      /**
       * <code>int32 line = 5;</code>
       * @return The line.
       */
      @java.lang.Override
      public int getLine() {
        return line_;
      }
      /**
       * <code>int32 line = 5;</code>
       * @param value The line to set.
       * @return This builder for chaining.
       */
      public Builder setLine(int value) {
        
        line_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 line = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearLine() {
        
        line_ = 0;
        onChanged();
        return this;
      }

      private int changedLines_ ;
      /**
       * <code>int32 changed_lines = 6;</code>
       * @return The changedLines.
       */
      @java.lang.Override
      public int getChangedLines() {
        return changedLines_;
      }
      /**
       * <code>int32 changed_lines = 6;</code>
       * @param value The changedLines to set.
       * @return This builder for chaining.
       */
      public Builder setChangedLines(int value) {
        
        changedLines_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 changed_lines = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearChangedLines() {
        
        changedLines_ = 0;
        onChanged();
        return this;
      }

      private int totalLines_ ;
      /**
       * <code>int32 total_lines = 7;</code>
       * @return The totalLines.
       */
      @java.lang.Override
      public int getTotalLines() {
        return totalLines_;
      }
      /**
       * <code>int32 total_lines = 7;</code>
       * @param value The totalLines to set.
       * @return This builder for chaining.
       */
      public Builder setTotalLines(int value) {
        
        totalLines_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 total_lines = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearTotalLines() {
        
        totalLines_ = 0;
        onChanged();
        return this;
      }

      private locust.parse.Parse.DefinitionParent parent_;
      private com.google.protobuf.SingleFieldBuilderV3<
          locust.parse.Parse.DefinitionParent, locust.parse.Parse.DefinitionParent.Builder, locust.parse.Parse.DefinitionParentOrBuilder> parentBuilder_;
      /**
       * <code>.locust.parse.DefinitionParent parent = 8;</code>
       * @return Whether the parent field is set.
       */
      public boolean hasParent() {
        return parentBuilder_ != null || parent_ != null;
      }
      /**
       * <code>.locust.parse.DefinitionParent parent = 8;</code>
       * @return The parent.
       */
      public locust.parse.Parse.DefinitionParent getParent() {
        if (parentBuilder_ == null) {
          return parent_ == null ? locust.parse.Parse.DefinitionParent.getDefaultInstance() : parent_;
        } else {
          return parentBuilder_.getMessage();
        }
      }
      /**
       * <code>.locust.parse.DefinitionParent parent = 8;</code>
       */
      public Builder setParent(locust.parse.Parse.DefinitionParent value) {
        if (parentBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          parent_ = value;
          onChanged();
        } else {
          parentBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.locust.parse.DefinitionParent parent = 8;</code>
       */
      public Builder setParent(
          locust.parse.Parse.DefinitionParent.Builder builderForValue) {
        if (parentBuilder_ == null) {
          parent_ = builderForValue.build();
          onChanged();
        } else {
          parentBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.locust.parse.DefinitionParent parent = 8;</code>
       */
      public Builder mergeParent(locust.parse.Parse.DefinitionParent value) {
        if (parentBuilder_ == null) {
          if (parent_ != null) {
            parent_ =
              locust.parse.Parse.DefinitionParent.newBuilder(parent_).mergeFrom(value).buildPartial();
          } else {
            parent_ = value;
          }
          onChanged();
        } else {
          parentBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.locust.parse.DefinitionParent parent = 8;</code>
       */
      public Builder clearParent() {
        if (parentBuilder_ == null) {
          parent_ = null;
          onChanged();
        } else {
          parent_ = null;
          parentBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.locust.parse.DefinitionParent parent = 8;</code>
       */
      public locust.parse.Parse.DefinitionParent.Builder getParentBuilder() {
        
        onChanged();
        return getParentFieldBuilder().getBuilder();
      }
      /**
       * <code>.locust.parse.DefinitionParent parent = 8;</code>
       */
      public locust.parse.Parse.DefinitionParentOrBuilder getParentOrBuilder() {
        if (parentBuilder_ != null) {
          return parentBuilder_.getMessageOrBuilder();
        } else {
          return parent_ == null ?
              locust.parse.Parse.DefinitionParent.getDefaultInstance() : parent_;
        }
      }
      /**
       * <code>.locust.parse.DefinitionParent parent = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          locust.parse.Parse.DefinitionParent, locust.parse.Parse.DefinitionParent.Builder, locust.parse.Parse.DefinitionParentOrBuilder> 
          getParentFieldBuilder() {
        if (parentBuilder_ == null) {
          parentBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              locust.parse.Parse.DefinitionParent, locust.parse.Parse.DefinitionParent.Builder, locust.parse.Parse.DefinitionParentOrBuilder>(
                  getParent(),
                  getParentForChildren(),
                  isClean());
          parent_ = null;
        }
        return parentBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:locust.parse.LocustChange)
    }

    // @@protoc_insertion_point(class_scope:locust.parse.LocustChange)
    private static final locust.parse.Parse.LocustChange DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new locust.parse.Parse.LocustChange();
    }

    public static locust.parse.Parse.LocustChange getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<LocustChange>
        PARSER = new com.google.protobuf.AbstractParser<LocustChange>() {
      @java.lang.Override
      public LocustChange parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new LocustChange(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<LocustChange> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<LocustChange> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public locust.parse.Parse.LocustChange getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ParseResultOrBuilder extends
      // @@protoc_insertion_point(interface_extends:locust.parse.ParseResult)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string repo = 1;</code>
     * @return The repo.
     */
    java.lang.String getRepo();
    /**
     * <code>string repo = 1;</code>
     * @return The bytes for repo.
     */
    com.google.protobuf.ByteString
        getRepoBytes();

    /**
     * <code>string initial_ref = 2;</code>
     * @return The initialRef.
     */
    java.lang.String getInitialRef();
    /**
     * <code>string initial_ref = 2;</code>
     * @return The bytes for initialRef.
     */
    com.google.protobuf.ByteString
        getInitialRefBytes();

    /**
     * <code>string terminal_ref = 3;</code>
     * @return The terminalRef.
     */
    java.lang.String getTerminalRef();
    /**
     * <code>string terminal_ref = 3;</code>
     * @return The bytes for terminalRef.
     */
    com.google.protobuf.ByteString
        getTerminalRefBytes();

    /**
     * <code>repeated .locust.git.PatchInfo patches = 4;</code>
     */
    java.util.List<locust.git.Git.PatchInfo> 
        getPatchesList();
    /**
     * <code>repeated .locust.git.PatchInfo patches = 4;</code>
     */
    locust.git.Git.PatchInfo getPatches(int index);
    /**
     * <code>repeated .locust.git.PatchInfo patches = 4;</code>
     */
    int getPatchesCount();
    /**
     * <code>repeated .locust.git.PatchInfo patches = 4;</code>
     */
    java.util.List<? extends locust.git.Git.PatchInfoOrBuilder> 
        getPatchesOrBuilderList();
    /**
     * <code>repeated .locust.git.PatchInfo patches = 4;</code>
     */
    locust.git.Git.PatchInfoOrBuilder getPatchesOrBuilder(
        int index);

    /**
     * <code>repeated .locust.parse.LocustChange changes = 5;</code>
     */
    java.util.List<locust.parse.Parse.LocustChange> 
        getChangesList();
    /**
     * <code>repeated .locust.parse.LocustChange changes = 5;</code>
     */
    locust.parse.Parse.LocustChange getChanges(int index);
    /**
     * <code>repeated .locust.parse.LocustChange changes = 5;</code>
     */
    int getChangesCount();
    /**
     * <code>repeated .locust.parse.LocustChange changes = 5;</code>
     */
    java.util.List<? extends locust.parse.Parse.LocustChangeOrBuilder> 
        getChangesOrBuilderList();
    /**
     * <code>repeated .locust.parse.LocustChange changes = 5;</code>
     */
    locust.parse.Parse.LocustChangeOrBuilder getChangesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code locust.parse.ParseResult}
   */
  public static final class ParseResult extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:locust.parse.ParseResult)
      ParseResultOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ParseResult.newBuilder() to construct.
    private ParseResult(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ParseResult() {
      repo_ = "";
      initialRef_ = "";
      terminalRef_ = "";
      patches_ = java.util.Collections.emptyList();
      changes_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ParseResult();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ParseResult(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              repo_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              initialRef_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              terminalRef_ = s;
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                patches_ = new java.util.ArrayList<locust.git.Git.PatchInfo>();
                mutable_bitField0_ |= 0x00000001;
              }
              patches_.add(
                  input.readMessage(locust.git.Git.PatchInfo.parser(), extensionRegistry));
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                changes_ = new java.util.ArrayList<locust.parse.Parse.LocustChange>();
                mutable_bitField0_ |= 0x00000002;
              }
              changes_.add(
                  input.readMessage(locust.parse.Parse.LocustChange.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          patches_ = java.util.Collections.unmodifiableList(patches_);
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          changes_ = java.util.Collections.unmodifiableList(changes_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return locust.parse.Parse.internal_static_locust_parse_ParseResult_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return locust.parse.Parse.internal_static_locust_parse_ParseResult_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              locust.parse.Parse.ParseResult.class, locust.parse.Parse.ParseResult.Builder.class);
    }

    public static final int REPO_FIELD_NUMBER = 1;
    private volatile java.lang.Object repo_;
    /**
     * <code>string repo = 1;</code>
     * @return The repo.
     */
    @java.lang.Override
    public java.lang.String getRepo() {
      java.lang.Object ref = repo_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        repo_ = s;
        return s;
      }
    }
    /**
     * <code>string repo = 1;</code>
     * @return The bytes for repo.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getRepoBytes() {
      java.lang.Object ref = repo_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        repo_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int INITIAL_REF_FIELD_NUMBER = 2;
    private volatile java.lang.Object initialRef_;
    /**
     * <code>string initial_ref = 2;</code>
     * @return The initialRef.
     */
    @java.lang.Override
    public java.lang.String getInitialRef() {
      java.lang.Object ref = initialRef_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        initialRef_ = s;
        return s;
      }
    }
    /**
     * <code>string initial_ref = 2;</code>
     * @return The bytes for initialRef.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getInitialRefBytes() {
      java.lang.Object ref = initialRef_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        initialRef_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TERMINAL_REF_FIELD_NUMBER = 3;
    private volatile java.lang.Object terminalRef_;
    /**
     * <code>string terminal_ref = 3;</code>
     * @return The terminalRef.
     */
    @java.lang.Override
    public java.lang.String getTerminalRef() {
      java.lang.Object ref = terminalRef_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        terminalRef_ = s;
        return s;
      }
    }
    /**
     * <code>string terminal_ref = 3;</code>
     * @return The bytes for terminalRef.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTerminalRefBytes() {
      java.lang.Object ref = terminalRef_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        terminalRef_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PATCHES_FIELD_NUMBER = 4;
    private java.util.List<locust.git.Git.PatchInfo> patches_;
    /**
     * <code>repeated .locust.git.PatchInfo patches = 4;</code>
     */
    @java.lang.Override
    public java.util.List<locust.git.Git.PatchInfo> getPatchesList() {
      return patches_;
    }
    /**
     * <code>repeated .locust.git.PatchInfo patches = 4;</code>
     */
    @java.lang.Override
    public java.util.List<? extends locust.git.Git.PatchInfoOrBuilder> 
        getPatchesOrBuilderList() {
      return patches_;
    }
    /**
     * <code>repeated .locust.git.PatchInfo patches = 4;</code>
     */
    @java.lang.Override
    public int getPatchesCount() {
      return patches_.size();
    }
    /**
     * <code>repeated .locust.git.PatchInfo patches = 4;</code>
     */
    @java.lang.Override
    public locust.git.Git.PatchInfo getPatches(int index) {
      return patches_.get(index);
    }
    /**
     * <code>repeated .locust.git.PatchInfo patches = 4;</code>
     */
    @java.lang.Override
    public locust.git.Git.PatchInfoOrBuilder getPatchesOrBuilder(
        int index) {
      return patches_.get(index);
    }

    public static final int CHANGES_FIELD_NUMBER = 5;
    private java.util.List<locust.parse.Parse.LocustChange> changes_;
    /**
     * <code>repeated .locust.parse.LocustChange changes = 5;</code>
     */
    @java.lang.Override
    public java.util.List<locust.parse.Parse.LocustChange> getChangesList() {
      return changes_;
    }
    /**
     * <code>repeated .locust.parse.LocustChange changes = 5;</code>
     */
    @java.lang.Override
    public java.util.List<? extends locust.parse.Parse.LocustChangeOrBuilder> 
        getChangesOrBuilderList() {
      return changes_;
    }
    /**
     * <code>repeated .locust.parse.LocustChange changes = 5;</code>
     */
    @java.lang.Override
    public int getChangesCount() {
      return changes_.size();
    }
    /**
     * <code>repeated .locust.parse.LocustChange changes = 5;</code>
     */
    @java.lang.Override
    public locust.parse.Parse.LocustChange getChanges(int index) {
      return changes_.get(index);
    }
    /**
     * <code>repeated .locust.parse.LocustChange changes = 5;</code>
     */
    @java.lang.Override
    public locust.parse.Parse.LocustChangeOrBuilder getChangesOrBuilder(
        int index) {
      return changes_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getRepoBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, repo_);
      }
      if (!getInitialRefBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, initialRef_);
      }
      if (!getTerminalRefBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, terminalRef_);
      }
      for (int i = 0; i < patches_.size(); i++) {
        output.writeMessage(4, patches_.get(i));
      }
      for (int i = 0; i < changes_.size(); i++) {
        output.writeMessage(5, changes_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getRepoBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, repo_);
      }
      if (!getInitialRefBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, initialRef_);
      }
      if (!getTerminalRefBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, terminalRef_);
      }
      for (int i = 0; i < patches_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, patches_.get(i));
      }
      for (int i = 0; i < changes_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, changes_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof locust.parse.Parse.ParseResult)) {
        return super.equals(obj);
      }
      locust.parse.Parse.ParseResult other = (locust.parse.Parse.ParseResult) obj;

      if (!getRepo()
          .equals(other.getRepo())) return false;
      if (!getInitialRef()
          .equals(other.getInitialRef())) return false;
      if (!getTerminalRef()
          .equals(other.getTerminalRef())) return false;
      if (!getPatchesList()
          .equals(other.getPatchesList())) return false;
      if (!getChangesList()
          .equals(other.getChangesList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + REPO_FIELD_NUMBER;
      hash = (53 * hash) + getRepo().hashCode();
      hash = (37 * hash) + INITIAL_REF_FIELD_NUMBER;
      hash = (53 * hash) + getInitialRef().hashCode();
      hash = (37 * hash) + TERMINAL_REF_FIELD_NUMBER;
      hash = (53 * hash) + getTerminalRef().hashCode();
      if (getPatchesCount() > 0) {
        hash = (37 * hash) + PATCHES_FIELD_NUMBER;
        hash = (53 * hash) + getPatchesList().hashCode();
      }
      if (getChangesCount() > 0) {
        hash = (37 * hash) + CHANGES_FIELD_NUMBER;
        hash = (53 * hash) + getChangesList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static locust.parse.Parse.ParseResult parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static locust.parse.Parse.ParseResult parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static locust.parse.Parse.ParseResult parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static locust.parse.Parse.ParseResult parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static locust.parse.Parse.ParseResult parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static locust.parse.Parse.ParseResult parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static locust.parse.Parse.ParseResult parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static locust.parse.Parse.ParseResult parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static locust.parse.Parse.ParseResult parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static locust.parse.Parse.ParseResult parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static locust.parse.Parse.ParseResult parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static locust.parse.Parse.ParseResult parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(locust.parse.Parse.ParseResult prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code locust.parse.ParseResult}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:locust.parse.ParseResult)
        locust.parse.Parse.ParseResultOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return locust.parse.Parse.internal_static_locust_parse_ParseResult_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return locust.parse.Parse.internal_static_locust_parse_ParseResult_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                locust.parse.Parse.ParseResult.class, locust.parse.Parse.ParseResult.Builder.class);
      }

      // Construct using locust.parse.Parse.ParseResult.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getPatchesFieldBuilder();
          getChangesFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        repo_ = "";

        initialRef_ = "";

        terminalRef_ = "";

        if (patchesBuilder_ == null) {
          patches_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          patchesBuilder_.clear();
        }
        if (changesBuilder_ == null) {
          changes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          changesBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return locust.parse.Parse.internal_static_locust_parse_ParseResult_descriptor;
      }

      @java.lang.Override
      public locust.parse.Parse.ParseResult getDefaultInstanceForType() {
        return locust.parse.Parse.ParseResult.getDefaultInstance();
      }

      @java.lang.Override
      public locust.parse.Parse.ParseResult build() {
        locust.parse.Parse.ParseResult result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public locust.parse.Parse.ParseResult buildPartial() {
        locust.parse.Parse.ParseResult result = new locust.parse.Parse.ParseResult(this);
        int from_bitField0_ = bitField0_;
        result.repo_ = repo_;
        result.initialRef_ = initialRef_;
        result.terminalRef_ = terminalRef_;
        if (patchesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            patches_ = java.util.Collections.unmodifiableList(patches_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.patches_ = patches_;
        } else {
          result.patches_ = patchesBuilder_.build();
        }
        if (changesBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            changes_ = java.util.Collections.unmodifiableList(changes_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.changes_ = changes_;
        } else {
          result.changes_ = changesBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof locust.parse.Parse.ParseResult) {
          return mergeFrom((locust.parse.Parse.ParseResult)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(locust.parse.Parse.ParseResult other) {
        if (other == locust.parse.Parse.ParseResult.getDefaultInstance()) return this;
        if (!other.getRepo().isEmpty()) {
          repo_ = other.repo_;
          onChanged();
        }
        if (!other.getInitialRef().isEmpty()) {
          initialRef_ = other.initialRef_;
          onChanged();
        }
        if (!other.getTerminalRef().isEmpty()) {
          terminalRef_ = other.terminalRef_;
          onChanged();
        }
        if (patchesBuilder_ == null) {
          if (!other.patches_.isEmpty()) {
            if (patches_.isEmpty()) {
              patches_ = other.patches_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensurePatchesIsMutable();
              patches_.addAll(other.patches_);
            }
            onChanged();
          }
        } else {
          if (!other.patches_.isEmpty()) {
            if (patchesBuilder_.isEmpty()) {
              patchesBuilder_.dispose();
              patchesBuilder_ = null;
              patches_ = other.patches_;
              bitField0_ = (bitField0_ & ~0x00000001);
              patchesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getPatchesFieldBuilder() : null;
            } else {
              patchesBuilder_.addAllMessages(other.patches_);
            }
          }
        }
        if (changesBuilder_ == null) {
          if (!other.changes_.isEmpty()) {
            if (changes_.isEmpty()) {
              changes_ = other.changes_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureChangesIsMutable();
              changes_.addAll(other.changes_);
            }
            onChanged();
          }
        } else {
          if (!other.changes_.isEmpty()) {
            if (changesBuilder_.isEmpty()) {
              changesBuilder_.dispose();
              changesBuilder_ = null;
              changes_ = other.changes_;
              bitField0_ = (bitField0_ & ~0x00000002);
              changesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getChangesFieldBuilder() : null;
            } else {
              changesBuilder_.addAllMessages(other.changes_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        locust.parse.Parse.ParseResult parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (locust.parse.Parse.ParseResult) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object repo_ = "";
      /**
       * <code>string repo = 1;</code>
       * @return The repo.
       */
      public java.lang.String getRepo() {
        java.lang.Object ref = repo_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          repo_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string repo = 1;</code>
       * @return The bytes for repo.
       */
      public com.google.protobuf.ByteString
          getRepoBytes() {
        java.lang.Object ref = repo_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          repo_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string repo = 1;</code>
       * @param value The repo to set.
       * @return This builder for chaining.
       */
      public Builder setRepo(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        repo_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string repo = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearRepo() {
        
        repo_ = getDefaultInstance().getRepo();
        onChanged();
        return this;
      }
      /**
       * <code>string repo = 1;</code>
       * @param value The bytes for repo to set.
       * @return This builder for chaining.
       */
      public Builder setRepoBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        repo_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object initialRef_ = "";
      /**
       * <code>string initial_ref = 2;</code>
       * @return The initialRef.
       */
      public java.lang.String getInitialRef() {
        java.lang.Object ref = initialRef_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          initialRef_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string initial_ref = 2;</code>
       * @return The bytes for initialRef.
       */
      public com.google.protobuf.ByteString
          getInitialRefBytes() {
        java.lang.Object ref = initialRef_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          initialRef_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string initial_ref = 2;</code>
       * @param value The initialRef to set.
       * @return This builder for chaining.
       */
      public Builder setInitialRef(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        initialRef_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string initial_ref = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearInitialRef() {
        
        initialRef_ = getDefaultInstance().getInitialRef();
        onChanged();
        return this;
      }
      /**
       * <code>string initial_ref = 2;</code>
       * @param value The bytes for initialRef to set.
       * @return This builder for chaining.
       */
      public Builder setInitialRefBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        initialRef_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object terminalRef_ = "";
      /**
       * <code>string terminal_ref = 3;</code>
       * @return The terminalRef.
       */
      public java.lang.String getTerminalRef() {
        java.lang.Object ref = terminalRef_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          terminalRef_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string terminal_ref = 3;</code>
       * @return The bytes for terminalRef.
       */
      public com.google.protobuf.ByteString
          getTerminalRefBytes() {
        java.lang.Object ref = terminalRef_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          terminalRef_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string terminal_ref = 3;</code>
       * @param value The terminalRef to set.
       * @return This builder for chaining.
       */
      public Builder setTerminalRef(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        terminalRef_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string terminal_ref = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearTerminalRef() {
        
        terminalRef_ = getDefaultInstance().getTerminalRef();
        onChanged();
        return this;
      }
      /**
       * <code>string terminal_ref = 3;</code>
       * @param value The bytes for terminalRef to set.
       * @return This builder for chaining.
       */
      public Builder setTerminalRefBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        terminalRef_ = value;
        onChanged();
        return this;
      }

      private java.util.List<locust.git.Git.PatchInfo> patches_ =
        java.util.Collections.emptyList();
      private void ensurePatchesIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          patches_ = new java.util.ArrayList<locust.git.Git.PatchInfo>(patches_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          locust.git.Git.PatchInfo, locust.git.Git.PatchInfo.Builder, locust.git.Git.PatchInfoOrBuilder> patchesBuilder_;

      /**
       * <code>repeated .locust.git.PatchInfo patches = 4;</code>
       */
      public java.util.List<locust.git.Git.PatchInfo> getPatchesList() {
        if (patchesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(patches_);
        } else {
          return patchesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .locust.git.PatchInfo patches = 4;</code>
       */
      public int getPatchesCount() {
        if (patchesBuilder_ == null) {
          return patches_.size();
        } else {
          return patchesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .locust.git.PatchInfo patches = 4;</code>
       */
      public locust.git.Git.PatchInfo getPatches(int index) {
        if (patchesBuilder_ == null) {
          return patches_.get(index);
        } else {
          return patchesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .locust.git.PatchInfo patches = 4;</code>
       */
      public Builder setPatches(
          int index, locust.git.Git.PatchInfo value) {
        if (patchesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePatchesIsMutable();
          patches_.set(index, value);
          onChanged();
        } else {
          patchesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .locust.git.PatchInfo patches = 4;</code>
       */
      public Builder setPatches(
          int index, locust.git.Git.PatchInfo.Builder builderForValue) {
        if (patchesBuilder_ == null) {
          ensurePatchesIsMutable();
          patches_.set(index, builderForValue.build());
          onChanged();
        } else {
          patchesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .locust.git.PatchInfo patches = 4;</code>
       */
      public Builder addPatches(locust.git.Git.PatchInfo value) {
        if (patchesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePatchesIsMutable();
          patches_.add(value);
          onChanged();
        } else {
          patchesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .locust.git.PatchInfo patches = 4;</code>
       */
      public Builder addPatches(
          int index, locust.git.Git.PatchInfo value) {
        if (patchesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePatchesIsMutable();
          patches_.add(index, value);
          onChanged();
        } else {
          patchesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .locust.git.PatchInfo patches = 4;</code>
       */
      public Builder addPatches(
          locust.git.Git.PatchInfo.Builder builderForValue) {
        if (patchesBuilder_ == null) {
          ensurePatchesIsMutable();
          patches_.add(builderForValue.build());
          onChanged();
        } else {
          patchesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .locust.git.PatchInfo patches = 4;</code>
       */
      public Builder addPatches(
          int index, locust.git.Git.PatchInfo.Builder builderForValue) {
        if (patchesBuilder_ == null) {
          ensurePatchesIsMutable();
          patches_.add(index, builderForValue.build());
          onChanged();
        } else {
          patchesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .locust.git.PatchInfo patches = 4;</code>
       */
      public Builder addAllPatches(
          java.lang.Iterable<? extends locust.git.Git.PatchInfo> values) {
        if (patchesBuilder_ == null) {
          ensurePatchesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, patches_);
          onChanged();
        } else {
          patchesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .locust.git.PatchInfo patches = 4;</code>
       */
      public Builder clearPatches() {
        if (patchesBuilder_ == null) {
          patches_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          patchesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .locust.git.PatchInfo patches = 4;</code>
       */
      public Builder removePatches(int index) {
        if (patchesBuilder_ == null) {
          ensurePatchesIsMutable();
          patches_.remove(index);
          onChanged();
        } else {
          patchesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .locust.git.PatchInfo patches = 4;</code>
       */
      public locust.git.Git.PatchInfo.Builder getPatchesBuilder(
          int index) {
        return getPatchesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .locust.git.PatchInfo patches = 4;</code>
       */
      public locust.git.Git.PatchInfoOrBuilder getPatchesOrBuilder(
          int index) {
        if (patchesBuilder_ == null) {
          return patches_.get(index);  } else {
          return patchesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .locust.git.PatchInfo patches = 4;</code>
       */
      public java.util.List<? extends locust.git.Git.PatchInfoOrBuilder> 
           getPatchesOrBuilderList() {
        if (patchesBuilder_ != null) {
          return patchesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(patches_);
        }
      }
      /**
       * <code>repeated .locust.git.PatchInfo patches = 4;</code>
       */
      public locust.git.Git.PatchInfo.Builder addPatchesBuilder() {
        return getPatchesFieldBuilder().addBuilder(
            locust.git.Git.PatchInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .locust.git.PatchInfo patches = 4;</code>
       */
      public locust.git.Git.PatchInfo.Builder addPatchesBuilder(
          int index) {
        return getPatchesFieldBuilder().addBuilder(
            index, locust.git.Git.PatchInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .locust.git.PatchInfo patches = 4;</code>
       */
      public java.util.List<locust.git.Git.PatchInfo.Builder> 
           getPatchesBuilderList() {
        return getPatchesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          locust.git.Git.PatchInfo, locust.git.Git.PatchInfo.Builder, locust.git.Git.PatchInfoOrBuilder> 
          getPatchesFieldBuilder() {
        if (patchesBuilder_ == null) {
          patchesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              locust.git.Git.PatchInfo, locust.git.Git.PatchInfo.Builder, locust.git.Git.PatchInfoOrBuilder>(
                  patches_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          patches_ = null;
        }
        return patchesBuilder_;
      }

      private java.util.List<locust.parse.Parse.LocustChange> changes_ =
        java.util.Collections.emptyList();
      private void ensureChangesIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          changes_ = new java.util.ArrayList<locust.parse.Parse.LocustChange>(changes_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          locust.parse.Parse.LocustChange, locust.parse.Parse.LocustChange.Builder, locust.parse.Parse.LocustChangeOrBuilder> changesBuilder_;

      /**
       * <code>repeated .locust.parse.LocustChange changes = 5;</code>
       */
      public java.util.List<locust.parse.Parse.LocustChange> getChangesList() {
        if (changesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(changes_);
        } else {
          return changesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .locust.parse.LocustChange changes = 5;</code>
       */
      public int getChangesCount() {
        if (changesBuilder_ == null) {
          return changes_.size();
        } else {
          return changesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .locust.parse.LocustChange changes = 5;</code>
       */
      public locust.parse.Parse.LocustChange getChanges(int index) {
        if (changesBuilder_ == null) {
          return changes_.get(index);
        } else {
          return changesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .locust.parse.LocustChange changes = 5;</code>
       */
      public Builder setChanges(
          int index, locust.parse.Parse.LocustChange value) {
        if (changesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChangesIsMutable();
          changes_.set(index, value);
          onChanged();
        } else {
          changesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .locust.parse.LocustChange changes = 5;</code>
       */
      public Builder setChanges(
          int index, locust.parse.Parse.LocustChange.Builder builderForValue) {
        if (changesBuilder_ == null) {
          ensureChangesIsMutable();
          changes_.set(index, builderForValue.build());
          onChanged();
        } else {
          changesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .locust.parse.LocustChange changes = 5;</code>
       */
      public Builder addChanges(locust.parse.Parse.LocustChange value) {
        if (changesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChangesIsMutable();
          changes_.add(value);
          onChanged();
        } else {
          changesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .locust.parse.LocustChange changes = 5;</code>
       */
      public Builder addChanges(
          int index, locust.parse.Parse.LocustChange value) {
        if (changesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChangesIsMutable();
          changes_.add(index, value);
          onChanged();
        } else {
          changesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .locust.parse.LocustChange changes = 5;</code>
       */
      public Builder addChanges(
          locust.parse.Parse.LocustChange.Builder builderForValue) {
        if (changesBuilder_ == null) {
          ensureChangesIsMutable();
          changes_.add(builderForValue.build());
          onChanged();
        } else {
          changesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .locust.parse.LocustChange changes = 5;</code>
       */
      public Builder addChanges(
          int index, locust.parse.Parse.LocustChange.Builder builderForValue) {
        if (changesBuilder_ == null) {
          ensureChangesIsMutable();
          changes_.add(index, builderForValue.build());
          onChanged();
        } else {
          changesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .locust.parse.LocustChange changes = 5;</code>
       */
      public Builder addAllChanges(
          java.lang.Iterable<? extends locust.parse.Parse.LocustChange> values) {
        if (changesBuilder_ == null) {
          ensureChangesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, changes_);
          onChanged();
        } else {
          changesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .locust.parse.LocustChange changes = 5;</code>
       */
      public Builder clearChanges() {
        if (changesBuilder_ == null) {
          changes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          changesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .locust.parse.LocustChange changes = 5;</code>
       */
      public Builder removeChanges(int index) {
        if (changesBuilder_ == null) {
          ensureChangesIsMutable();
          changes_.remove(index);
          onChanged();
        } else {
          changesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .locust.parse.LocustChange changes = 5;</code>
       */
      public locust.parse.Parse.LocustChange.Builder getChangesBuilder(
          int index) {
        return getChangesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .locust.parse.LocustChange changes = 5;</code>
       */
      public locust.parse.Parse.LocustChangeOrBuilder getChangesOrBuilder(
          int index) {
        if (changesBuilder_ == null) {
          return changes_.get(index);  } else {
          return changesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .locust.parse.LocustChange changes = 5;</code>
       */
      public java.util.List<? extends locust.parse.Parse.LocustChangeOrBuilder> 
           getChangesOrBuilderList() {
        if (changesBuilder_ != null) {
          return changesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(changes_);
        }
      }
      /**
       * <code>repeated .locust.parse.LocustChange changes = 5;</code>
       */
      public locust.parse.Parse.LocustChange.Builder addChangesBuilder() {
        return getChangesFieldBuilder().addBuilder(
            locust.parse.Parse.LocustChange.getDefaultInstance());
      }
      /**
       * <code>repeated .locust.parse.LocustChange changes = 5;</code>
       */
      public locust.parse.Parse.LocustChange.Builder addChangesBuilder(
          int index) {
        return getChangesFieldBuilder().addBuilder(
            index, locust.parse.Parse.LocustChange.getDefaultInstance());
      }
      /**
       * <code>repeated .locust.parse.LocustChange changes = 5;</code>
       */
      public java.util.List<locust.parse.Parse.LocustChange.Builder> 
           getChangesBuilderList() {
        return getChangesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          locust.parse.Parse.LocustChange, locust.parse.Parse.LocustChange.Builder, locust.parse.Parse.LocustChangeOrBuilder> 
          getChangesFieldBuilder() {
        if (changesBuilder_ == null) {
          changesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              locust.parse.Parse.LocustChange, locust.parse.Parse.LocustChange.Builder, locust.parse.Parse.LocustChangeOrBuilder>(
                  changes_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          changes_ = null;
        }
        return changesBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:locust.parse.ParseResult)
    }

    // @@protoc_insertion_point(class_scope:locust.parse.ParseResult)
    private static final locust.parse.Parse.ParseResult DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new locust.parse.Parse.ParseResult();
    }

    public static locust.parse.Parse.ParseResult getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ParseResult>
        PARSER = new com.google.protobuf.AbstractParser<ParseResult>() {
      @java.lang.Override
      public ParseResult parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ParseResult(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ParseResult> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ParseResult> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public locust.parse.Parse.ParseResult getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_locust_parse_DefinitionParent_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_locust_parse_DefinitionParent_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_locust_parse_RawDefinition_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_locust_parse_RawDefinition_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_locust_parse_LocustChange_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_locust_parse_LocustChange_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_locust_parse_ParseResult_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_locust_parse_ParseResult_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\013parse.proto\022\014locust.parse\032\tgit.proto\"." +
      "\n\020DefinitionParent\022\014\n\004name\030\001 \001(\t\022\014\n\004line" +
      "\030\002 \001(\005\"\246\001\n\rRawDefinition\022\014\n\004name\030\001 \001(\t\022\023" +
      "\n\013change_type\030\002 \001(\t\022\014\n\004line\030\003 \001(\005\022\016\n\006off" +
      "set\030\004 \001(\005\022\020\n\010end_line\030\005 \001(\005\022\022\n\nend_offse" +
      "t\030\006 \001(\005\022.\n\006parent\030\007 \001(\0132\036.locust.parse.D" +
      "efinitionParent\"\277\001\n\014LocustChange\022\014\n\004name" +
      "\030\001 \001(\t\022\023\n\013change_type\030\002 \001(\t\022\020\n\010filepath\030" +
      "\003 \001(\t\022\020\n\010revision\030\004 \001(\t\022\014\n\004line\030\005 \001(\005\022\025\n" +
      "\rchanged_lines\030\006 \001(\005\022\023\n\013total_lines\030\007 \001(" +
      "\005\022.\n\006parent\030\010 \001(\0132\036.locust.parse.Definit" +
      "ionParent\"\233\001\n\013ParseResult\022\014\n\004repo\030\001 \001(\t\022" +
      "\023\n\013initial_ref\030\002 \001(\t\022\024\n\014terminal_ref\030\003 \001" +
      "(\t\022&\n\007patches\030\004 \003(\0132\025.locust.git.PatchIn" +
      "fo\022+\n\007changes\030\005 \003(\0132\032.locust.parse.Locus" +
      "tChangeb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          locust.git.Git.getDescriptor(),
        });
    internal_static_locust_parse_DefinitionParent_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_locust_parse_DefinitionParent_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_locust_parse_DefinitionParent_descriptor,
        new java.lang.String[] { "Name", "Line", });
    internal_static_locust_parse_RawDefinition_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_locust_parse_RawDefinition_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_locust_parse_RawDefinition_descriptor,
        new java.lang.String[] { "Name", "ChangeType", "Line", "Offset", "EndLine", "EndOffset", "Parent", });
    internal_static_locust_parse_LocustChange_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_locust_parse_LocustChange_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_locust_parse_LocustChange_descriptor,
        new java.lang.String[] { "Name", "ChangeType", "Filepath", "Revision", "Line", "ChangedLines", "TotalLines", "Parent", });
    internal_static_locust_parse_ParseResult_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_locust_parse_ParseResult_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_locust_parse_ParseResult_descriptor,
        new java.lang.String[] { "Repo", "InitialRef", "TerminalRef", "Patches", "Changes", });
    locust.git.Git.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
